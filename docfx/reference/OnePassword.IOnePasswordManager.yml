### YamlMime:ApiPage
title: Interface IOnePasswordManager
body:
- api1: Interface IOnePasswordManager
  id: OnePassword_IOnePasswordManager
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L7
  metadata:
    uid: OnePassword.IOnePasswordManager
    commentId: T:OnePassword.IOnePasswordManager
- facts:
  - name: Namespace
    value:
      text: OnePassword
      url: OnePassword.html
  - name: Assembly
    value: OnePassword.NET.dll
- markdown: Defines a 1Password CLI executable manager.
- code: public interface IOnePasswordManager
- h2: Properties
- api3: Version
  id: OnePassword_IOnePasswordManager_Version
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.cs#L10
  metadata:
    uid: OnePassword.IOnePasswordManager.Version
    commentId: P:OnePassword.IOnePasswordManager.Version
- markdown: The version of the 1Password CLI executable.
- code: string Version { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- h2: Methods
- api3: AddAccount(string, string, string, string, string)
  id: OnePassword_IOnePasswordManager_AddAccount_System_String_System_String_System_String_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Accounts.cs#L23
  metadata:
    uid: OnePassword.IOnePasswordManager.AddAccount(System.String,System.String,System.String,System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.AddAccount(System.String,System.String,System.String,System.String,System.String)
- markdown: Adds an account.
- code: void AddAccount(string address, string email, string secretKey, string password, string shorthand = "")
- h4: Parameters
- parameters:
  - name: address
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account address.
  - name: email
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account email.
  - name: secretKey
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account secret key.
  - name: password
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account password.
  - name: shorthand
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account shorthand.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ArchiveDocument(IDocument, IVault)
  id: OnePassword_IOnePasswordManager_ArchiveDocument_OnePassword_Documents_IDocument_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L122
  metadata:
    uid: OnePassword.IOnePasswordManager.ArchiveDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.ArchiveDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault)
- markdown: Archives a document.
- code: void ArchiveDocument(IDocument document, IVault vault)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to archive.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the document to archive.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ArchiveDocument(string, string)
  id: OnePassword_IOnePasswordManager_ArchiveDocument_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L128
  metadata:
    uid: OnePassword.IOnePasswordManager.ArchiveDocument(System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.ArchiveDocument(System.String,System.String)
- markdown: Archives a document.
- code: void ArchiveDocument(string documentId, string vaultId)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to archive.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the document to archive.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ArchiveItem(IItem, IVault)
  id: OnePassword_IOnePasswordManager_ArchiveItem_OnePassword_Items_IItem_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L112
  metadata:
    uid: OnePassword.IOnePasswordManager.ArchiveItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.ArchiveItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
- markdown: Archives an item.
- code: void ArchiveItem(IItem item, IVault vault)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: IItem
      url: OnePassword.Items.IItem.html
    description: The item to archive.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the item to archive.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ArchiveItem(string, string)
  id: OnePassword_IOnePasswordManager_ArchiveItem_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L118
  metadata:
    uid: OnePassword.IOnePasswordManager.ArchiveItem(System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.ArchiveItem(System.String,System.String)
- markdown: Archives an item.
- code: void ArchiveItem(string itemId, string vaultId)
- h4: Parameters
- parameters:
  - name: itemId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the item to archive.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the item to archive.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ConfirmAllUsers()
  id: OnePassword_IOnePasswordManager_ConfirmAllUsers
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L69
  metadata:
    uid: OnePassword.IOnePasswordManager.ConfirmAllUsers
    commentId: M:OnePassword.IOnePasswordManager.ConfirmAllUsers
- markdown: Confirms all users.
- code: void ConfirmAllUsers()
- api3: ConfirmUser(IUser)
  id: OnePassword_IOnePasswordManager_ConfirmUser_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L61
  metadata:
    uid: OnePassword.IOnePasswordManager.ConfirmUser(OnePassword.Users.IUser)
    commentId: M:OnePassword.IOnePasswordManager.ConfirmUser(OnePassword.Users.IUser)
- markdown: Confirms a user.
- code: void ConfirmUser(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to confirm.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ConfirmUser(string)
  id: OnePassword_IOnePasswordManager_ConfirmUser_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L66
  metadata:
    uid: OnePassword.IOnePasswordManager.ConfirmUser(System.String)
    commentId: M:OnePassword.IOnePasswordManager.ConfirmUser(System.String)
- markdown: Confirms a user.
- code: void ConfirmUser(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to confirm.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateDocument(IVault, string, string?, string?, IReadOnlyCollection<string>?)
  id: OnePassword_IOnePasswordManager_CreateDocument_OnePassword_Vaults_IVault_System_String_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L86
  metadata:
    uid: OnePassword.IOnePasswordManager.CreateDocument(OnePassword.Vaults.IVault,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.IOnePasswordManager.CreateDocument(OnePassword.Vaults.IVault,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: Creates a document.
- code: Document CreateDocument(IVault vault, string filePath, string? fileName = null, string? title = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault in which to create the document.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The path to the file to upload.
  - name: fileName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's filename.
    optional: true
  - name: title
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's title.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The document's tags.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Document
      url: OnePassword.Documents.Document.html
    description: The created document.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateDocument(string, string, string?, string?, IReadOnlyCollection<string>?)
  id: OnePassword_IOnePasswordManager_CreateDocument_System_String_System_String_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L96
  metadata:
    uid: OnePassword.IOnePasswordManager.CreateDocument(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.IOnePasswordManager.CreateDocument(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: Creates a document.
- code: Document CreateDocument(string vaultId, string filePath, string? fileName = null, string? title = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault in which to create the document.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The path to the file to upload.
  - name: fileName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's filename.
    optional: true
  - name: title
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's title.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The document's tags.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Document
      url: OnePassword.Documents.Document.html
    description: The created document.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateGroup(string, string?)
  id: OnePassword_IOnePasswordManager_CreateGroup_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L54
  metadata:
    uid: OnePassword.IOnePasswordManager.CreateGroup(System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.CreateGroup(System.String,System.String)
- markdown: Create a group.
- code: GroupDetails CreateGroup(string name, string? description = null)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The group name.
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group description.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: GroupDetails
      url: OnePassword.Groups.GroupDetails.html
    description: The created group.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateItem(Template, IVault)
  id: OnePassword_IOnePasswordManager_CreateItem_OnePassword_Templates_Template_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L85
  metadata:
    uid: OnePassword.IOnePasswordManager.CreateItem(OnePassword.Templates.Template,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.CreateItem(OnePassword.Templates.Template,OnePassword.Vaults.IVault)
- markdown: Creates an item.
- code: Item CreateItem(Template template, IVault vault)
- h4: Parameters
- parameters:
  - name: template
    type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template from which to create the item.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault in which to create the item.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The created item.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateItem(Template, string)
  id: OnePassword_IOnePasswordManager_CreateItem_OnePassword_Templates_Template_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L92
  metadata:
    uid: OnePassword.IOnePasswordManager.CreateItem(OnePassword.Templates.Template,System.String)
    commentId: M:OnePassword.IOnePasswordManager.CreateItem(OnePassword.Templates.Template,System.String)
- markdown: Creates an item.
- code: Item CreateItem(Template template, string vaultId)
- h4: Parameters
- parameters:
  - name: template
    type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template from which to create the item.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault in which to create the item.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The created item.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateVault(string, string?, VaultIcon, bool?)
  id: OnePassword_IOnePasswordManager_CreateVault_System_String_System_String_OnePassword_Vaults_VaultIcon_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L56
  metadata:
    uid: OnePassword.IOnePasswordManager.CreateVault(System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
    commentId: M:OnePassword.IOnePasswordManager.CreateVault(System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
- markdown: Creates a vault.
- code: VaultDetails CreateVault(string name, string? description = null, VaultIcon icon = VaultIcon.Default, bool? allowAdminsToManage = null)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The vault name.
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault description.
    optional: true
  - name: icon
    type:
    - text: VaultIcon
      url: OnePassword.Vaults.VaultIcon.html
    description: The vault icon.
    optional: true
  - name: allowAdminsToManage
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, allows administrators to manage the vault.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: VaultDetails
      url: OnePassword.Vaults.VaultDetails.html
    description: The created vault.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteDocument(IDocument, IVault)
  id: OnePassword_IOnePasswordManager_DeleteDocument_OnePassword_Documents_IDocument_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L134
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.DeleteDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault)
- markdown: Deletes a document.
- code: void DeleteDocument(IDocument document, IVault vault)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to delete.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the document to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteDocument(string, string)
  id: OnePassword_IOnePasswordManager_DeleteDocument_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L140
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteDocument(System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.DeleteDocument(System.String,System.String)
- markdown: Deletes a document.
- code: void DeleteDocument(string documentId, string vaultId)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to delete.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the document to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteGroup(IGroup)
  id: OnePassword_IOnePasswordManager_DeleteGroup_OnePassword_Groups_IGroup_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L75
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteGroup(OnePassword.Groups.IGroup)
    commentId: M:OnePassword.IOnePasswordManager.DeleteGroup(OnePassword.Groups.IGroup)
- markdown: Deletes a group.
- code: void DeleteGroup(IGroup group)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteGroup(string)
  id: OnePassword_IOnePasswordManager_DeleteGroup_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L80
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteGroup(System.String)
    commentId: M:OnePassword.IOnePasswordManager.DeleteGroup(System.String)
- markdown: Deletes a group.
- code: void DeleteGroup(string groupId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteItem(IItem, IVault)
  id: OnePassword_IOnePasswordManager_DeleteItem_OnePassword_Items_IItem_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L124
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.DeleteItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
- markdown: Deletes an item.
- code: void DeleteItem(IItem item, IVault vault)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: IItem
      url: OnePassword.Items.IItem.html
    description: The item to delete.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the item to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteItem(string, string)
  id: OnePassword_IOnePasswordManager_DeleteItem_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L130
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteItem(System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.DeleteItem(System.String,System.String)
- markdown: Deletes an item.
- code: void DeleteItem(string itemId, string vaultId)
- h4: Parameters
- parameters:
  - name: itemId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the item to delete.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the item to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteUser(IUser)
  id: OnePassword_IOnePasswordManager_DeleteUser_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L90
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteUser(OnePassword.Users.IUser)
    commentId: M:OnePassword.IOnePasswordManager.DeleteUser(OnePassword.Users.IUser)
- markdown: Deletes a user.
- code: void DeleteUser(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteUser(string)
  id: OnePassword_IOnePasswordManager_DeleteUser_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L95
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteUser(System.String)
    commentId: M:OnePassword.IOnePasswordManager.DeleteUser(System.String)
- markdown: Deletes a user.
- code: void DeleteUser(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteVault(IVault)
  id: OnePassword_IOnePasswordManager_DeleteVault_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L81
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteVault(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.DeleteVault(OnePassword.Vaults.IVault)
- markdown: Deletes a vault.
- code: void DeleteVault(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteVault(string)
  id: OnePassword_IOnePasswordManager_DeleteVault_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L86
  metadata:
    uid: OnePassword.IOnePasswordManager.DeleteVault(System.String)
    commentId: M:OnePassword.IOnePasswordManager.DeleteVault(System.String)
- markdown: Deletes a vault.
- code: void DeleteVault(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: EditGroup(IGroup, string?, string?)
  id: OnePassword_IOnePasswordManager_EditGroup_OnePassword_Groups_IGroup_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L62
  metadata:
    uid: OnePassword.IOnePasswordManager.EditGroup(OnePassword.Groups.IGroup,System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.EditGroup(OnePassword.Groups.IGroup,System.String,System.String)
- markdown: Edits a group.
- code: void EditGroup(IGroup group, string? name = null, string? description = null)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group's new name.
    optional: true
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group's new description.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditGroup(string, string?, string?)
  id: OnePassword_IOnePasswordManager_EditGroup_System_String_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L70
  metadata:
    uid: OnePassword.IOnePasswordManager.EditGroup(System.String,System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.EditGroup(System.String,System.String,System.String)
- markdown: Edits a group.
- code: void EditGroup(string groupId, string? name = null, string? description = null)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group's new name.
    optional: true
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group's new description.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditItem(Item, IVault)
  id: OnePassword_IOnePasswordManager_EditItem_OnePassword_Items_Item_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L99
  metadata:
    uid: OnePassword.IOnePasswordManager.EditItem(OnePassword.Items.Item,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.EditItem(OnePassword.Items.Item,OnePassword.Vaults.IVault)
- markdown: Edits an item.
- code: Item EditItem(Item item, IVault vault)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item to edit.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the item to edit.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The edited item.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: EditItem(Item, string)
  id: OnePassword_IOnePasswordManager_EditItem_OnePassword_Items_Item_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L106
  metadata:
    uid: OnePassword.IOnePasswordManager.EditItem(OnePassword.Items.Item,System.String)
    commentId: M:OnePassword.IOnePasswordManager.EditItem(OnePassword.Items.Item,System.String)
- markdown: Edits an item.
- code: Item EditItem(Item item, string vaultId)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item to edit.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the item to edit.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The edited item.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: EditUser(IUser, string?, bool?)
  id: OnePassword_IOnePasswordManager_EditUser_OnePassword_Users_IUser_System_String_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L77
  metadata:
    uid: OnePassword.IOnePasswordManager.EditUser(OnePassword.Users.IUser,System.String,System.Nullable{System.Boolean})
    commentId: M:OnePassword.IOnePasswordManager.EditUser(OnePassword.Users.IUser,System.String,System.Nullable{System.Boolean})
- markdown: Edits a user.
- code: void EditUser(IUser user, string? name = null, bool? travelMode = null)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The user's new name.
    optional: true
  - name: travelMode
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, enables travel mode on the vault. If enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> disables it.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditUser(string, string?, bool?)
  id: OnePassword_IOnePasswordManager_EditUser_System_String_System_String_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L85
  metadata:
    uid: OnePassword.IOnePasswordManager.EditUser(System.String,System.String,System.Nullable{System.Boolean})
    commentId: M:OnePassword.IOnePasswordManager.EditUser(System.String,System.String,System.Nullable{System.Boolean})
- markdown: Edits a user.
- code: void EditUser(string userId, string? name = null, bool? travelMode = null)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The user's new name.
    optional: true
  - name: travelMode
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, enables travel mode on the vault. If enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> disables it.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditVault(IVault, string?, string?, VaultIcon, bool?)
  id: OnePassword_IOnePasswordManager_EditVault_OnePassword_Vaults_IVault_System_String_System_String_OnePassword_Vaults_VaultIcon_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L66
  metadata:
    uid: OnePassword.IOnePasswordManager.EditVault(OnePassword.Vaults.IVault,System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
    commentId: M:OnePassword.IOnePasswordManager.EditVault(OnePassword.Vaults.IVault,System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
- markdown: Edits a vault.
- code: void EditVault(IVault vault, string? name = null, string? description = null, VaultIcon icon = VaultIcon.Default, bool? travelMode = null)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault's new name.
    optional: true
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault's new description.
    optional: true
  - name: icon
    type:
    - text: VaultIcon
      url: OnePassword.Vaults.VaultIcon.html
    description: The vault's new icon.
    optional: true
  - name: travelMode
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, enables travel mode on the vault. If enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> disables it.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditVault(string, string?, string?, VaultIcon, bool?)
  id: OnePassword_IOnePasswordManager_EditVault_System_String_System_String_System_String_OnePassword_Vaults_VaultIcon_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L76
  metadata:
    uid: OnePassword.IOnePasswordManager.EditVault(System.String,System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
    commentId: M:OnePassword.IOnePasswordManager.EditVault(System.String,System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
- markdown: Edits a vault.
- code: void EditVault(string vaultId, string? name = null, string? description = null, VaultIcon icon = VaultIcon.Default, bool? travelMode = null)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault's new name.
    optional: true
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault's new description.
    optional: true
  - name: icon
    type:
    - text: VaultIcon
      url: OnePassword.Vaults.VaultIcon.html
    description: The vault's new icon.
    optional: true
  - name: travelMode
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, enables travel mode on the vault. If enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> disables it.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: ForgetAccount(bool)
  id: OnePassword_IOnePasswordManager_ForgetAccount_System_Boolean_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Accounts.cs#L42
  metadata:
    uid: OnePassword.IOnePasswordManager.ForgetAccount(System.Boolean)
    commentId: M:OnePassword.IOnePasswordManager.ForgetAccount(System.Boolean)
- markdown: Forgets the account.
- code: ImmutableList<string> ForgetAccount(bool all = false)
- h4: Parameters
- parameters:
  - name: all
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, forgets all accounts.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    description: The list of accounts that were forgotten.
- api3: GetAccount(string)
  id: OnePassword_IOnePasswordManager_GetAccount_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Accounts.cs#L14
  metadata:
    uid: OnePassword.IOnePasswordManager.GetAccount(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetAccount(System.String)
- markdown: Gets the account details.
- code: AccountDetails GetAccount(string account = "")
- h4: Parameters
- parameters:
  - name: account
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account to retrieve.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: AccountDetails
      url: OnePassword.Accounts.AccountDetails.html
    description: The account details.
- api3: GetAccounts()
  id: OnePassword_IOnePasswordManager_GetAccounts
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Accounts.cs#L9
  metadata:
    uid: OnePassword.IOnePasswordManager.GetAccounts
    commentId: M:OnePassword.IOnePasswordManager.GetAccounts
- markdown: Gets the accounts.
- code: ImmutableList<Account> GetAccounts()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Account
      url: OnePassword.Accounts.Account.html
    - '>'
    description: The list of accounts.
- api3: GetDocument(IDocument, IVault, string, string?)
  id: OnePassword_IOnePasswordManager_GetDocument_OnePassword_Documents_IDocument_OnePassword_Vaults_IVault_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L44
  metadata:
    uid: OnePassword.IOnePasswordManager.GetDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault,System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault,System.String,System.String)
- markdown: Gets a document.
- code: void GetDocument(IDocument document, IVault vault, string filePath, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to retrieve.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the document to retrieve.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetDocument(string, string, string, string?)
  id: OnePassword_IOnePasswordManager_GetDocument_System_String_System_String_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L52
  metadata:
    uid: OnePassword.IOnePasswordManager.GetDocument(System.String,System.String,System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetDocument(System.String,System.String,System.String,System.String)
- markdown: Gets a document.
- code: void GetDocument(string documentId, string vaultId, string filePath, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to retrieve.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the document to retrieve.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetDocuments(IVault)
  id: OnePassword_IOnePasswordManager_GetDocuments_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L12
  metadata:
    uid: OnePassword.IOnePasswordManager.GetDocuments(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.GetDocuments(OnePassword.Vaults.IVault)
- markdown: Gets a vault's documents.
- code: ImmutableList<DocumentDetails> GetDocuments(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the documents to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: DocumentDetails
      url: OnePassword.Documents.DocumentDetails.html
    - '>'
    description: The vault's documents.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetDocuments(string)
  id: OnePassword_IOnePasswordManager_GetDocuments_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L18
  metadata:
    uid: OnePassword.IOnePasswordManager.GetDocuments(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetDocuments(System.String)
- markdown: Gets a vault's documents.
- code: ImmutableList<DocumentDetails> GetDocuments(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the documents to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: DocumentDetails
      url: OnePassword.Documents.DocumentDetails.html
    - '>'
    description: The vault's documents.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroup(IGroup)
  id: OnePassword_IOnePasswordManager_GetGroup_OnePassword_Groups_IGroup_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L41
  metadata:
    uid: OnePassword.IOnePasswordManager.GetGroup(OnePassword.Groups.IGroup)
    commentId: M:OnePassword.IOnePasswordManager.GetGroup(OnePassword.Groups.IGroup)
- markdown: Gets the group's details.
- code: GroupDetails GetGroup(IGroup group)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: GroupDetails
      url: OnePassword.Groups.GroupDetails.html
    description: The group details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroup(string)
  id: OnePassword_IOnePasswordManager_GetGroup_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L47
  metadata:
    uid: OnePassword.IOnePasswordManager.GetGroup(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetGroup(System.String)
- markdown: Gets the group's details.
- code: GroupDetails GetGroup(string groupId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: GroupDetails
      url: OnePassword.Groups.GroupDetails.html
    description: The group details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroupUsers(string)
  id: OnePassword_IOnePasswordManager_GetGroupUsers_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L30
  metadata:
    uid: OnePassword.IOnePasswordManager.GetGroupUsers(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetGroupUsers(System.String)
- markdown: Gets a group's users.
- code: ImmutableList<GroupUser> GetGroupUsers(string groupId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group for which to retrieve users.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: GroupUser
      url: OnePassword.Users.GroupUser.html
    - '>'
    description: The group's users.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroupVaults(string)
  id: OnePassword_IOnePasswordManager_GetGroupVaults_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L29
  metadata:
    uid: OnePassword.IOnePasswordManager.GetGroupVaults(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetGroupVaults(System.String)
- markdown: Gets a group's vaults.
- code: ImmutableList<Vault> GetGroupVaults(string groupId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to retrieve vaults for.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The group's vaults.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroups()
  id: OnePassword_IOnePasswordManager_GetGroups
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L11
  metadata:
    uid: OnePassword.IOnePasswordManager.GetGroups
    commentId: M:OnePassword.IOnePasswordManager.GetGroups
- markdown: Gets the groups.
- code: ImmutableList<Group> GetGroups()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Group
      url: OnePassword.Groups.Group.html
    - '>'
    description: The list of groups.
- api3: GetGroups(IVault)
  id: OnePassword_IOnePasswordManager_GetGroups_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L17
  metadata:
    uid: OnePassword.IOnePasswordManager.GetGroups(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.GetGroups(OnePassword.Vaults.IVault)
- markdown: Gets a vault's groups.
- code: ImmutableList<VaultGroup> GetGroups(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault for which to retrieve groups.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: VaultGroup
      url: OnePassword.Groups.VaultGroup.html
    - '>'
    description: The vault's groups.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroups(IUser)
  id: OnePassword_IOnePasswordManager_GetGroups_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L23
  metadata:
    uid: OnePassword.IOnePasswordManager.GetGroups(OnePassword.Users.IUser)
    commentId: M:OnePassword.IOnePasswordManager.GetGroups(OnePassword.Users.IUser)
- markdown: Gets a user's groups.
- code: ImmutableList<UserGroup> GetGroups(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user for which to retrieve groups.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: UserGroup
      url: OnePassword.Groups.UserGroup.html
    - '>'
    description: The user's groups.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetItem(IItem, IVault)
  id: OnePassword_IOnePasswordManager_GetItem_OnePassword_Items_IItem_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L51
  metadata:
    uid: OnePassword.IOnePasswordManager.GetItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.GetItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
- markdown: Gets an item.
- code: Item GetItem(IItem item, IVault vault)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: IItem
      url: OnePassword.Items.IItem.html
    description: The item to retrieve.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the item to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetItem(string, string)
  id: OnePassword_IOnePasswordManager_GetItem_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L58
  metadata:
    uid: OnePassword.IOnePasswordManager.GetItem(System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetItem(System.String,System.String)
- markdown: Gets an item.
- code: Item GetItem(string itemId, string vaultId)
- h4: Parameters
- parameters:
  - name: itemId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the item to retrieve.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the item to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetItems(IVault)
  id: OnePassword_IOnePasswordManager_GetItems_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L13
  metadata:
    uid: OnePassword.IOnePasswordManager.GetItems(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.GetItems(OnePassword.Vaults.IVault)
- markdown: Gets a vault's items.
- code: ImmutableList<Item> GetItems(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the items to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Item
      url: OnePassword.Items.Item.html
    - '>'
    description: The vault's items.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetItems(string)
  id: OnePassword_IOnePasswordManager_GetItems_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L19
  metadata:
    uid: OnePassword.IOnePasswordManager.GetItems(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetItems(System.String)
- markdown: Gets a vault's items.
- code: ImmutableList<Item> GetItems(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the items to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Item
      url: OnePassword.Items.Item.html
    - '>'
    description: The vault's items.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetSecret(string)
  id: OnePassword_IOnePasswordManager_GetSecret_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.cs#L20
  metadata:
    uid: OnePassword.IOnePasswordManager.GetSecret(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetSecret(System.String)
- markdown: Gets a secret.
- code: string GetSecret(string reference)
- h4: Parameters
- parameters:
  - name: reference
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The reference to the secret.
- h4: Returns
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: Returns the secret.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetTemplate(ITemplate)
  id: OnePassword_IOnePasswordManager_GetTemplate_OnePassword_Templates_ITemplate_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Templates.cs#L16
  metadata:
    uid: OnePassword.IOnePasswordManager.GetTemplate(OnePassword.Templates.ITemplate)
    commentId: M:OnePassword.IOnePasswordManager.GetTemplate(OnePassword.Templates.ITemplate)
- markdown: Gets a template.
- code: Template GetTemplate(ITemplate template)
- h4: Parameters
- parameters:
  - name: template
    type:
    - text: ITemplate
      url: OnePassword.Templates.ITemplate.html
    description: The template to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetTemplate(string)
  id: OnePassword_IOnePasswordManager_GetTemplate_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Templates.cs#L22
  metadata:
    uid: OnePassword.IOnePasswordManager.GetTemplate(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetTemplate(System.String)
- markdown: Gets a template.
- code: Template GetTemplate(string name)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The template name to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetTemplate(Category)
  id: OnePassword_IOnePasswordManager_GetTemplate_OnePassword_Items_Category_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Templates.cs#L28
  metadata:
    uid: OnePassword.IOnePasswordManager.GetTemplate(OnePassword.Items.Category)
    commentId: M:OnePassword.IOnePasswordManager.GetTemplate(OnePassword.Items.Category)
- markdown: Gets a template.
- code: Template GetTemplate(Category category)
- h4: Parameters
- parameters:
  - name: category
    type:
    - text: Category
      url: OnePassword.Items.Category.html
    description: The template category.
- h4: Returns
- parameters:
  - type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetTemplates()
  id: OnePassword_IOnePasswordManager_GetTemplates
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Templates.cs#L10
  metadata:
    uid: OnePassword.IOnePasswordManager.GetTemplates
    commentId: M:OnePassword.IOnePasswordManager.GetTemplates
- markdown: Gets the templates.
- code: ImmutableList<TemplateInfo> GetTemplates()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: TemplateInfo
      url: OnePassword.Templates.TemplateInfo.html
    - '>'
    description: The list of templates.
- api3: GetUser(IUser)
  id: OnePassword_IOnePasswordManager_GetUser_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L42
  metadata:
    uid: OnePassword.IOnePasswordManager.GetUser(OnePassword.Users.IUser)
    commentId: M:OnePassword.IOnePasswordManager.GetUser(OnePassword.Users.IUser)
- markdown: Gets the user's details.
- code: UserDetails GetUser(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: UserDetails
      url: OnePassword.Users.UserDetails.html
    description: The user details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUser(string)
  id: OnePassword_IOnePasswordManager_GetUser_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L48
  metadata:
    uid: OnePassword.IOnePasswordManager.GetUser(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetUser(System.String)
- markdown: Gets the user's details.
- code: UserDetails GetUser(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: UserDetails
      url: OnePassword.Users.UserDetails.html
    description: The user details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUserGroups(string)
  id: OnePassword_IOnePasswordManager_GetUserGroups_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L35
  metadata:
    uid: OnePassword.IOnePasswordManager.GetUserGroups(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetUserGroups(System.String)
- markdown: Gets a user's groups.
- code: ImmutableList<UserGroup> GetUserGroups(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user for which to retrieve groups.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: UserGroup
      url: OnePassword.Groups.UserGroup.html
    - '>'
    description: The user's groups.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUserVaults(string)
  id: OnePassword_IOnePasswordManager_GetUserVaults_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L35
  metadata:
    uid: OnePassword.IOnePasswordManager.GetUserVaults(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetUserVaults(System.String)
- markdown: Gets a user's vaults.
- code: ImmutableList<Vault> GetUserVaults(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to retrieve vaults for.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The user's vaults.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUsers()
  id: OnePassword_IOnePasswordManager_GetUsers
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L12
  metadata:
    uid: OnePassword.IOnePasswordManager.GetUsers
    commentId: M:OnePassword.IOnePasswordManager.GetUsers
- markdown: Gets the users.
- code: ImmutableList<User> GetUsers()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: User
      url: OnePassword.Users.User.html
    - '>'
    description: The list of users.
- api3: GetUsers(IGroup)
  id: OnePassword_IOnePasswordManager_GetUsers_OnePassword_Groups_IGroup_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L18
  metadata:
    uid: OnePassword.IOnePasswordManager.GetUsers(OnePassword.Groups.IGroup)
    commentId: M:OnePassword.IOnePasswordManager.GetUsers(OnePassword.Groups.IGroup)
- markdown: Gets a group's users.
- code: ImmutableList<GroupUser> GetUsers(IGroup group)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group for which to retrieve users.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: GroupUser
      url: OnePassword.Users.GroupUser.html
    - '>'
    description: The group's users.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUsers(IVault)
  id: OnePassword_IOnePasswordManager_GetUsers_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L24
  metadata:
    uid: OnePassword.IOnePasswordManager.GetUsers(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.GetUsers(OnePassword.Vaults.IVault)
- markdown: Gets a vault's users.
- code: ImmutableList<VaultUser> GetUsers(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault for which to retrieve users.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: VaultUser
      url: OnePassword.Users.VaultUser.html
    - '>'
    description: The vault's users.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVault(IVault)
  id: OnePassword_IOnePasswordManager_GetVault_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L41
  metadata:
    uid: OnePassword.IOnePasswordManager.GetVault(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.IOnePasswordManager.GetVault(OnePassword.Vaults.IVault)
- markdown: Gets a vault.
- code: VaultDetails GetVault(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: VaultDetails
      url: OnePassword.Vaults.VaultDetails.html
    description: The vault details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVault(string)
  id: OnePassword_IOnePasswordManager_GetVault_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L47
  metadata:
    uid: OnePassword.IOnePasswordManager.GetVault(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetVault(System.String)
- markdown: Gets a vault.
- code: VaultDetails GetVault(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: VaultDetails
      url: OnePassword.Vaults.VaultDetails.html
    description: The vault details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVaultGroups(string)
  id: OnePassword_IOnePasswordManager_GetVaultGroups_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L29
  metadata:
    uid: OnePassword.IOnePasswordManager.GetVaultGroups(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetVaultGroups(System.String)
- markdown: Gets a vault's groups.
- code: ImmutableList<VaultGroup> GetVaultGroups(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault for which to retrieve groups.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: VaultGroup
      url: OnePassword.Groups.VaultGroup.html
    - '>'
    description: The vault's groups.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVaultUsers(string)
  id: OnePassword_IOnePasswordManager_GetVaultUsers_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L36
  metadata:
    uid: OnePassword.IOnePasswordManager.GetVaultUsers(System.String)
    commentId: M:OnePassword.IOnePasswordManager.GetVaultUsers(System.String)
- markdown: Gets a vault's users.
- code: ImmutableList<VaultUser> GetVaultUsers(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault for which to retrieve users.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: VaultUser
      url: OnePassword.Users.VaultUser.html
    - '>'
    description: The vault's users.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVaults()
  id: OnePassword_IOnePasswordManager_GetVaults
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L11
  metadata:
    uid: OnePassword.IOnePasswordManager.GetVaults
    commentId: M:OnePassword.IOnePasswordManager.GetVaults
- markdown: Gets the vaults.
- code: ImmutableList<Vault> GetVaults()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The list of vaults.
- api3: GetVaults(IGroup)
  id: OnePassword_IOnePasswordManager_GetVaults_OnePassword_Groups_IGroup_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L17
  metadata:
    uid: OnePassword.IOnePasswordManager.GetVaults(OnePassword.Groups.IGroup)
    commentId: M:OnePassword.IOnePasswordManager.GetVaults(OnePassword.Groups.IGroup)
- markdown: Gets a group's vaults.
- code: ImmutableList<Vault> GetVaults(IGroup group)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to retrieve vaults for.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The group's vaults.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVaults(IUser)
  id: OnePassword_IOnePasswordManager_GetVaults_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L23
  metadata:
    uid: OnePassword.IOnePasswordManager.GetVaults(OnePassword.Users.IUser)
    commentId: M:OnePassword.IOnePasswordManager.GetVaults(OnePassword.Users.IUser)
- markdown: Gets a user's vaults.
- code: ImmutableList<Vault> GetVaults(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to retrieve vaults for.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The user's vaults.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantAccess(IGroup, IUser, UserRole)
  id: OnePassword_IOnePasswordManager_GrantAccess_OnePassword_Groups_IGroup_OnePassword_Users_IUser_OnePassword_Users_UserRole_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L87
  metadata:
    uid: OnePassword.IOnePasswordManager.GrantAccess(OnePassword.Groups.IGroup,OnePassword.Users.IUser,OnePassword.Users.UserRole)
    commentId: M:OnePassword.IOnePasswordManager.GrantAccess(OnePassword.Groups.IGroup,OnePassword.Users.IUser,OnePassword.Users.UserRole)
- markdown: Grants a user access to a group.
- code: void GrantAccess(IGroup group, IUser user, UserRole userRole = UserRole.Member)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to grant access from.
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to grant access to.
  - name: userRole
    type:
    - text: UserRole
      url: OnePassword.Users.UserRole.html
    description: The user role to grant.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantAccess(string, string, UserRole)
  id: OnePassword_IOnePasswordManager_GrantAccess_System_String_System_String_OnePassword_Users_UserRole_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L94
  metadata:
    uid: OnePassword.IOnePasswordManager.GrantAccess(System.String,System.String,OnePassword.Users.UserRole)
    commentId: M:OnePassword.IOnePasswordManager.GrantAccess(System.String,System.String,OnePassword.Users.UserRole)
- markdown: Grants a user access to a group.
- code: void GrantAccess(string groupId, string userId, UserRole userRole = UserRole.Member)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to grant access from.
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to grant access to.
  - name: userRole
    type:
    - text: UserRole
      url: OnePassword.Users.UserRole.html
    description: The user role to grant.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantGroupPermissions(string, string, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_IOnePasswordManager_GrantGroupPermissions_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L107
  metadata:
    uid: OnePassword.IOnePasswordManager.GrantGroupPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.IOnePasswordManager.GrantGroupPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Grants a group permissions to a vault.
- code: void GrantGroupPermissions(string vaultId, string groupId, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to grant permissions from.
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to grant permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to grant.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantPermissions(IVault, IGroup, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_IOnePasswordManager_GrantPermissions_OnePassword_Vaults_IVault_OnePassword_Groups_IGroup_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L93
  metadata:
    uid: OnePassword.IOnePasswordManager.GrantPermissions(OnePassword.Vaults.IVault,OnePassword.Groups.IGroup,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.IOnePasswordManager.GrantPermissions(OnePassword.Vaults.IVault,OnePassword.Groups.IGroup,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Grants a group permissions to a vault.
- code: void GrantPermissions(IVault vault, IGroup group, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to grant permissions from.
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to grant permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to grant.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantPermissions(IVault, IUser, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_IOnePasswordManager_GrantPermissions_OnePassword_Vaults_IVault_OnePassword_Users_IUser_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L100
  metadata:
    uid: OnePassword.IOnePasswordManager.GrantPermissions(OnePassword.Vaults.IVault,OnePassword.Users.IUser,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.IOnePasswordManager.GrantPermissions(OnePassword.Vaults.IVault,OnePassword.Users.IUser,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Grants a user permissions to a vault.
- code: void GrantPermissions(IVault vault, IUser user, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to grant permissions from.
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to grant permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to grant.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantUserPermissions(string, string, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_IOnePasswordManager_GrantUserPermissions_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L114
  metadata:
    uid: OnePassword.IOnePasswordManager.GrantUserPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.IOnePasswordManager.GrantUserPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Grants a user permissions to a vault.
- code: void GrantUserPermissions(string vaultId, string userId, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to grant permissions from.
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to grant permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to grant.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ProvisionUser(string, string, Language)
  id: OnePassword_IOnePasswordManager_ProvisionUser_System_String_System_String_OnePassword_Common_Language_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L56
  metadata:
    uid: OnePassword.IOnePasswordManager.ProvisionUser(System.String,System.String,OnePassword.Common.Language)
    commentId: M:OnePassword.IOnePasswordManager.ProvisionUser(System.String,System.String,OnePassword.Common.Language)
- markdown: Provisions a user.
- code: UserDetails ProvisionUser(string name, string emailAddress, Language language = Language.Default)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The user name.
  - name: emailAddress
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The user email address.
  - name: language
    type:
    - text: Language
      url: OnePassword.Common.Language.html
    description: The user language.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: UserDetails
      url: OnePassword.Users.UserDetails.html
    description: The provisioned user.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ReactivateUser(IUser)
  id: OnePassword_IOnePasswordManager_ReactivateUser_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L112
  metadata:
    uid: OnePassword.IOnePasswordManager.ReactivateUser(OnePassword.Users.IUser)
    commentId: M:OnePassword.IOnePasswordManager.ReactivateUser(OnePassword.Users.IUser)
- markdown: Reactivates a user.
- code: void ReactivateUser(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to reactivate.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ReactivateUser(string)
  id: OnePassword_IOnePasswordManager_ReactivateUser_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L117
  metadata:
    uid: OnePassword.IOnePasswordManager.ReactivateUser(System.String)
    commentId: M:OnePassword.IOnePasswordManager.ReactivateUser(System.String)
- markdown: Reactivates a user.
- code: void ReactivateUser(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to reactivate.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ReplaceDocument(IDocument, IVault, string, string?, string?, IReadOnlyCollection<string>?)
  id: OnePassword_IOnePasswordManager_ReplaceDocument_OnePassword_Documents_IDocument_OnePassword_Vaults_IVault_System_String_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L106
  metadata:
    uid: OnePassword.IOnePasswordManager.ReplaceDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.IOnePasswordManager.ReplaceDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: Replaces a document.
- code: void ReplaceDocument(IDocument document, IVault vault, string filePath, string? fileName = null, string? title = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to replace.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the document to replace.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The path to the file to upload.
  - name: fileName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's filename.
    optional: true
  - name: title
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's title.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The document's tags.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ReplaceDocument(string, string, string, string?, string?, IReadOnlyCollection<string>?)
  id: OnePassword_IOnePasswordManager_ReplaceDocument_System_String_System_String_System_String_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L116
  metadata:
    uid: OnePassword.IOnePasswordManager.ReplaceDocument(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.IOnePasswordManager.ReplaceDocument(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: Replaces a document.
- code: void ReplaceDocument(string documentId, string vaultId, string filePath, string? fileName = null, string? title = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to replace.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the document to replace.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The path to the file to upload.
  - name: fileName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's filename.
    optional: true
  - name: title
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's title.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The document's tags.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokeAccess(IGroup, IUser)
  id: OnePassword_IOnePasswordManager_RevokeAccess_OnePassword_Groups_IGroup_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L100
  metadata:
    uid: OnePassword.IOnePasswordManager.RevokeAccess(OnePassword.Groups.IGroup,OnePassword.Users.IUser)
    commentId: M:OnePassword.IOnePasswordManager.RevokeAccess(OnePassword.Groups.IGroup,OnePassword.Users.IUser)
- markdown: Revokes a user's access to a group.
- code: void RevokeAccess(IGroup group, IUser user)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to revoke access from.
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to revoke access to.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokeAccess(string, string)
  id: OnePassword_IOnePasswordManager_RevokeAccess_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Groups.cs#L106
  metadata:
    uid: OnePassword.IOnePasswordManager.RevokeAccess(System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.RevokeAccess(System.String,System.String)
- markdown: Revokes a user's access to a group.
- code: void RevokeAccess(string groupId, string userId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to revoke access from.
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to revoke access to.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokeGroupPermissions(string, string, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_IOnePasswordManager_RevokeGroupPermissions_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L135
  metadata:
    uid: OnePassword.IOnePasswordManager.RevokeGroupPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.IOnePasswordManager.RevokeGroupPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Revokes a group's permissions to a vault.
- code: void RevokeGroupPermissions(string vaultId, string groupId, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to revoke permissions from.
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to revoke permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to revoke.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokePermissions(IVault, IGroup, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_IOnePasswordManager_RevokePermissions_OnePassword_Vaults_IVault_OnePassword_Groups_IGroup_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L121
  metadata:
    uid: OnePassword.IOnePasswordManager.RevokePermissions(OnePassword.Vaults.IVault,OnePassword.Groups.IGroup,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.IOnePasswordManager.RevokePermissions(OnePassword.Vaults.IVault,OnePassword.Groups.IGroup,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Revokes a group's permissions to a vault.
- code: void RevokePermissions(IVault vault, IGroup group, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to revoke permissions from.
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to revoke permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to revoke.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokePermissions(IVault, IUser, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_IOnePasswordManager_RevokePermissions_OnePassword_Vaults_IVault_OnePassword_Users_IUser_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L128
  metadata:
    uid: OnePassword.IOnePasswordManager.RevokePermissions(OnePassword.Vaults.IVault,OnePassword.Users.IUser,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.IOnePasswordManager.RevokePermissions(OnePassword.Vaults.IVault,OnePassword.Users.IUser,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Revokes a user's permissions to a vault.
- code: void RevokePermissions(IVault vault, IUser user, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to revoke permissions from.
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to revoke permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to revoke.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokeUserPermissions(string, string, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_IOnePasswordManager_RevokeUserPermissions_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Vaults.cs#L142
  metadata:
    uid: OnePassword.IOnePasswordManager.RevokeUserPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.IOnePasswordManager.RevokeUserPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Revokes a user's permissions to a vault.
- code: void RevokeUserPermissions(string vaultId, string userId, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to revoke permissions from.
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to revoke permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to revoke.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SaveSecret(string, string, string?)
  id: OnePassword_IOnePasswordManager_SaveSecret_System_String_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.cs#L27
  metadata:
    uid: OnePassword.IOnePasswordManager.SaveSecret(System.String,System.String,System.String)
    commentId: M:OnePassword.IOnePasswordManager.SaveSecret(System.String,System.String,System.String)
- markdown: Saves a secret.
- code: void SaveSecret(string reference, string filePath, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: reference
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The reference to the secret.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForDocument(IDocument, string, IVault?, bool?, string?)
  id: OnePassword_IOnePasswordManager_SearchForDocument_OnePassword_Documents_IDocument_System_String_OnePassword_Vaults_IVault_System_Nullable_System_Boolean__System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L64
  metadata:
    uid: OnePassword.IOnePasswordManager.SearchForDocument(OnePassword.Documents.IDocument,System.String,OnePassword.Vaults.IVault,System.Nullable{System.Boolean},System.String)
    commentId: M:OnePassword.IOnePasswordManager.SearchForDocument(OnePassword.Documents.IDocument,System.String,OnePassword.Vaults.IVault,System.Nullable{System.Boolean},System.String)
- markdown: >-
    Searches for a document.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: void SearchForDocument(IDocument document, string filePath, IVault? vault = null, bool? includeArchive = null, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to search for.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    - '?'
    description: The vault that contains the document to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived documents in the search.
    optional: true
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForDocument(string, string, string?, bool?, string?)
  id: OnePassword_IOnePasswordManager_SearchForDocument_System_String_System_String_System_String_System_Nullable_System_Boolean__System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L76
  metadata:
    uid: OnePassword.IOnePasswordManager.SearchForDocument(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)
    commentId: M:OnePassword.IOnePasswordManager.SearchForDocument(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)
- markdown: >-
    Searches for a document.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: void SearchForDocument(string documentId, string filePath, string? vaultId = null, bool? includeArchive = null, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to search for.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The ID of the vault that contains the document to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived documents in the search.
    optional: true
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForDocuments(IVault, bool?)
  id: OnePassword_IOnePasswordManager_SearchForDocuments_OnePassword_Vaults_IVault_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L27
  metadata:
    uid: OnePassword.IOnePasswordManager.SearchForDocuments(OnePassword.Vaults.IVault,System.Nullable{System.Boolean})
    commentId: M:OnePassword.IOnePasswordManager.SearchForDocuments(OnePassword.Vaults.IVault,System.Nullable{System.Boolean})
- markdown: >-
    Searches for an document.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: ImmutableList<DocumentDetails> SearchForDocuments(IVault vault, bool? includeArchive = null)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the documents to search for.
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived documents in the search.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: DocumentDetails
      url: OnePassword.Documents.DocumentDetails.html
    - '>'
    description: The documents that match the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForDocuments(string?, bool?)
  id: OnePassword_IOnePasswordManager_SearchForDocuments_System_String_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Documents.cs#L36
  metadata:
    uid: OnePassword.IOnePasswordManager.SearchForDocuments(System.String,System.Nullable{System.Boolean})
    commentId: M:OnePassword.IOnePasswordManager.SearchForDocuments(System.String,System.Nullable{System.Boolean})
- markdown: >-
    Searches for an document.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: ImmutableList<DocumentDetails> SearchForDocuments(string? vaultId = null, bool? includeArchive = null)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The ID of the vault that contains the documents to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived documents in the search.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: DocumentDetails
      url: OnePassword.Documents.DocumentDetails.html
    - '>'
    description: The documents that match the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForItem(IItem, IVault?, bool?)
  id: OnePassword_IOnePasswordManager_SearchForItem_OnePassword_Items_IItem_OnePassword_Vaults_IVault_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L68
  metadata:
    uid: OnePassword.IOnePasswordManager.SearchForItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault,System.Nullable{System.Boolean})
    commentId: M:OnePassword.IOnePasswordManager.SearchForItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault,System.Nullable{System.Boolean})
- markdown: >-
    Searches for an item.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: Item SearchForItem(IItem item, IVault? vault = null, bool? includeArchive = null)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: IItem
      url: OnePassword.Items.IItem.html
    description: The item to search for.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    - '?'
    description: The vault that contains the item to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived items in the search.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item that matches the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForItem(string, string?, bool?)
  id: OnePassword_IOnePasswordManager_SearchForItem_System_String_System_String_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L78
  metadata:
    uid: OnePassword.IOnePasswordManager.SearchForItem(System.String,System.String,System.Nullable{System.Boolean})
    commentId: M:OnePassword.IOnePasswordManager.SearchForItem(System.String,System.String,System.Nullable{System.Boolean})
- markdown: >-
    Searches for an item.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: Item SearchForItem(string itemId, string? vaultId = null, bool? includeArchive = null)
- h4: Parameters
- parameters:
  - name: itemId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the item to search for.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The ID of the vault that contains the item to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived items in the search.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item that matches the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForItems(IVault, bool?, bool?, IReadOnlyCollection<Category>?, IReadOnlyCollection<string>?)
  id: OnePassword_IOnePasswordManager_SearchForItems_OnePassword_Vaults_IVault_System_Nullable_System_Boolean__System_Nullable_System_Boolean__System_Collections_Generic_IReadOnlyCollection_OnePassword_Items_Category__System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L31
  metadata:
    uid: OnePassword.IOnePasswordManager.SearchForItems(OnePassword.Vaults.IVault,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyCollection{OnePassword.Items.Category},System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.IOnePasswordManager.SearchForItems(OnePassword.Vaults.IVault,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyCollection{OnePassword.Items.Category},System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: >-
    Searches for an item.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: ImmutableList<Item> SearchForItems(IVault vault, bool? includeArchive = null, bool? favorite = null, IReadOnlyCollection<Category>? categories = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the items to search for.
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived items in the search.
    optional: true
  - name: favorite
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, searches for favorites.
    optional: true
  - name: categories
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: Category
      url: OnePassword.Items.Category.html
    - '>'
    - '?'
    description: The categories to search for.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The tags to search for.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Item
      url: OnePassword.Items.Item.html
    - '>'
    description: The items that match the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForItems(string?, bool?, bool?, IReadOnlyCollection<Category>?, IReadOnlyCollection<string>?)
  id: OnePassword_IOnePasswordManager_SearchForItems_System_String_System_Nullable_System_Boolean__System_Nullable_System_Boolean__System_Collections_Generic_IReadOnlyCollection_OnePassword_Items_Category__System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Items.cs#L43
  metadata:
    uid: OnePassword.IOnePasswordManager.SearchForItems(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyCollection{OnePassword.Items.Category},System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.IOnePasswordManager.SearchForItems(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyCollection{OnePassword.Items.Category},System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: >-
    Searches for an item.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: ImmutableList<Item> SearchForItems(string? vaultId = null, bool? includeArchive = null, bool? favorite = null, IReadOnlyCollection<Category>? categories = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The ID of the vault that contains the items to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived items in the search.
    optional: true
  - name: favorite
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, searches for favorites.
    optional: true
  - name: categories
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: Category
      url: OnePassword.Items.Category.html
    - '>'
    - '?'
    description: The categories to search for.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The tags to search for.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Item
      url: OnePassword.Items.Item.html
    - '>'
    description: The items that match the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SignIn(string?)
  id: OnePassword_IOnePasswordManager_SignIn_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Accounts.cs#L33
  metadata:
    uid: OnePassword.IOnePasswordManager.SignIn(System.String)
    commentId: M:OnePassword.IOnePasswordManager.SignIn(System.String)
- markdown: Signs in to the account.
- code: void SignIn(string? password = null)
- h4: Parameters
- parameters:
  - name: password
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The account password to use when manually signing in.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SignOut(bool)
  id: OnePassword_IOnePasswordManager_SignOut_System_Boolean_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Accounts.cs#L37
  metadata:
    uid: OnePassword.IOnePasswordManager.SignOut(System.Boolean)
    commentId: M:OnePassword.IOnePasswordManager.SignOut(System.Boolean)
- markdown: Signs out of the account.
- code: void SignOut(bool all = false)
- h4: Parameters
- parameters:
  - name: all
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, signs out of all accounts.
    optional: true
- api3: SuspendUser(IUser, int?)
  id: OnePassword_IOnePasswordManager_SuspendUser_OnePassword_Users_IUser_System_Nullable_System_Int32__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L101
  metadata:
    uid: OnePassword.IOnePasswordManager.SuspendUser(OnePassword.Users.IUser,System.Nullable{System.Int32})
    commentId: M:OnePassword.IOnePasswordManager.SuspendUser(OnePassword.Users.IUser,System.Nullable{System.Int32})
- markdown: Suspends a user.
- code: void SuspendUser(IUser user, int? deauthorizeDevicesDelay = null)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to suspend.
  - name: deauthorizeDevicesDelay
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    - '?'
    description: The number of seconds to delay deauthorizing devices after the user has been suspended.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SuspendUser(string, int?)
  id: OnePassword_IOnePasswordManager_SuspendUser_System_String_System_Nullable_System_Int32__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Users.cs#L107
  metadata:
    uid: OnePassword.IOnePasswordManager.SuspendUser(System.String,System.Nullable{System.Int32})
    commentId: M:OnePassword.IOnePasswordManager.SuspendUser(System.String,System.Nullable{System.Int32})
- markdown: Suspends a user.
- code: void SuspendUser(string userId, int? deauthorizeDevicesDelay = null)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to suspend.
  - name: deauthorizeDevicesDelay
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    - '?'
    description: The number of seconds to delay deauthorizing devices after the user has been suspended.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: Update()
  id: OnePassword_IOnePasswordManager_Update
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.cs#L14
  metadata:
    uid: OnePassword.IOnePasswordManager.Update
    commentId: M:OnePassword.IOnePasswordManager.Update
- markdown: Updates the 1Password CLI executable.
- code: bool Update()
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the 1Password CLI executable has been updated, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
- api3: UseAccount(string)
  id: OnePassword_IOnePasswordManager_UseAccount_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/IOnePasswordManager.Accounts.cs#L28
  metadata:
    uid: OnePassword.IOnePasswordManager.UseAccount(System.String)
    commentId: M:OnePassword.IOnePasswordManager.UseAccount(System.String)
- markdown: Uses the account.
- code: void UseAccount(string account)
- h4: Parameters
- parameters:
  - name: account
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account to use.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
languageId: csharp
metadata:
  description: Defines a 1Password CLI executable manager.
