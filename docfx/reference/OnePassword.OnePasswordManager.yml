### YamlMime:ApiPage
title: Class OnePasswordManager
body:
- api1: Class OnePasswordManager
  id: OnePassword_OnePasswordManager
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L8
  metadata:
    uid: OnePassword.OnePasswordManager
    commentId: T:OnePassword.OnePasswordManager
- facts:
  - name: Namespace
    value:
      text: OnePassword
      url: OnePassword.html
  - name: Assembly
    value: OnePassword.NET.dll
- markdown: Represents the 1Password CLI executable manager.
- code: 'public sealed class OnePasswordManager : IOnePasswordManager'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: OnePasswordManager
    url: OnePassword.OnePasswordManager.html
- h4: Implements
- list:
  - text: IOnePasswordManager
    url: OnePassword.IOnePasswordManager.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: OnePasswordManager(Action<OnePasswordManagerOptions>)
  id: OnePassword_OnePasswordManager__ctor_System_Action_OnePassword_OnePasswordManagerOptions__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.cs#L29
  metadata:
    uid: OnePassword.OnePasswordManager.#ctor(System.Action{OnePassword.OnePasswordManagerOptions})
    commentId: M:OnePassword.OnePasswordManager.#ctor(System.Action{OnePassword.OnePasswordManagerOptions})
- markdown: Initializes a new instance of <xref href="OnePassword.OnePasswordManager" data-throw-if-not-resolved="false"></xref> using the specified options.
- code: public OnePasswordManager(Action<OnePasswordManagerOptions> options)
- h4: Parameters
- parameters:
  - name: options
    type:
    - text: Action
      url: https://learn.microsoft.com/dotnet/api/system.action-1
    - <
    - text: OnePasswordManagerOptions
      url: OnePassword.OnePasswordManagerOptions.html
    - '>'
    description: The configuration options.
- h4: Exceptions
- parameters:
  - type:
    - text: FileNotFoundException
      url: https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception
    description: Thrown when the 1Password CLI executable cannot be found.
- api3: OnePasswordManager(OnePasswordManagerOptions?)
  id: OnePassword_OnePasswordManager__ctor_OnePassword_OnePasswordManagerOptions_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.cs#L36
  metadata:
    uid: OnePassword.OnePasswordManager.#ctor(OnePassword.OnePasswordManagerOptions)
    commentId: M:OnePassword.OnePasswordManager.#ctor(OnePassword.OnePasswordManagerOptions)
- markdown: Initializes a new instance of <xref href="OnePassword.OnePasswordManager" data-throw-if-not-resolved="false"></xref> using the specified options.
- code: public OnePasswordManager(OnePasswordManagerOptions? options = null)
- h4: Parameters
- parameters:
  - name: options
    type:
    - text: OnePasswordManagerOptions
      url: OnePassword.OnePasswordManagerOptions.html
    - '?'
    description: The configuration options.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: FileNotFoundException
      url: https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception
    description: Thrown when the 1Password CLI executable cannot be found.
- api3: OnePasswordManager(string, string, bool, bool)
  id: OnePassword_OnePasswordManager__ctor_System_String_System_String_System_Boolean_System_Boolean_
  deprecated: This constructor is deprecated. Please use the constructor overload with 'OnePasswordManagerOptions' as argument.
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.cs#L65
  metadata:
    uid: OnePassword.OnePasswordManager.#ctor(System.String,System.String,System.Boolean,System.Boolean)
    commentId: M:OnePassword.OnePasswordManager.#ctor(System.String,System.String,System.Boolean,System.Boolean)
- markdown: Initializes a new instance of <xref href="OnePassword.OnePasswordManager" data-throw-if-not-resolved="false"></xref> for the specified 1Password CLI executable.
- code: >-
    [Obsolete("This constructor is deprecated. Please use the constructor overload with 'OnePasswordManagerOptions' as argument.")]

    public OnePasswordManager(string path = "", string executable = "op.exe", bool verbose = false, bool appIntegrated = false)
- h4: Parameters
- parameters:
  - name: path
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The path to the 1Password CLI executable.
    optional: true
  - name: executable
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The name of the 1Password CLI executable.
    optional: true
  - name: verbose
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, commands sent to the 1Password CLI executable are output to the console.
    optional: true
  - name: appIntegrated
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: >-
      Set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when authentication is integrated into the 1Password desktop application (see <a href="https://developer.1password.com/docs/cli/get-started/#sign-in">documentation</a>). When

      <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, a password will be required to sign in.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: FileNotFoundException
      url: https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception
    description: Thrown when the 1Password CLI executable cannot be found.
- h2: Properties
- api3: Version
  id: OnePassword_OnePasswordManager_Version
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.cs#L13
  metadata:
    uid: OnePassword.OnePasswordManager.Version
    commentId: P:OnePassword.OnePasswordManager.Version
- markdown: The version of the 1Password CLI executable.
- code: public string Version { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- h2: Methods
- api3: AddAccount(string, string, string, string, string)
  id: OnePassword_OnePasswordManager_AddAccount_System_String_System_String_System_String_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Accounts.cs#L40
  metadata:
    uid: OnePassword.OnePasswordManager.AddAccount(System.String,System.String,System.String,System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.AddAccount(System.String,System.String,System.String,System.String,System.String)
- markdown: Adds an account.
- code: public void AddAccount(string address, string email, string secretKey, string password, string shorthand = "")
- h4: Parameters
- parameters:
  - name: address
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account address.
  - name: email
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account email.
  - name: secretKey
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account secret key.
  - name: password
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account password.
  - name: shorthand
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account shorthand.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ArchiveDocument(IDocument, IVault)
  id: OnePassword_OnePasswordManager_ArchiveDocument_OnePassword_Documents_IDocument_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L224
  metadata:
    uid: OnePassword.OnePasswordManager.ArchiveDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.ArchiveDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault)
- markdown: Archives a document.
- code: public void ArchiveDocument(IDocument document, IVault vault)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to archive.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the document to archive.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ArchiveDocument(string, string)
  id: OnePassword_OnePasswordManager_ArchiveDocument_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L235
  metadata:
    uid: OnePassword.OnePasswordManager.ArchiveDocument(System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.ArchiveDocument(System.String,System.String)
- markdown: Archives a document.
- code: public void ArchiveDocument(string documentId, string vaultId)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to archive.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the document to archive.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ArchiveItem(IItem, IVault)
  id: OnePassword_OnePasswordManager_ArchiveItem_OnePassword_Items_IItem_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L173
  metadata:
    uid: OnePassword.OnePasswordManager.ArchiveItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.ArchiveItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
- markdown: Archives an item.
- code: public void ArchiveItem(IItem item, IVault vault)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: IItem
      url: OnePassword.Items.IItem.html
    description: The item to archive.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the item to archive.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ArchiveItem(string, string)
  id: OnePassword_OnePasswordManager_ArchiveItem_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L184
  metadata:
    uid: OnePassword.OnePasswordManager.ArchiveItem(System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.ArchiveItem(System.String,System.String)
- markdown: Archives an item.
- code: public void ArchiveItem(string itemId, string vaultId)
- h4: Parameters
- parameters:
  - name: itemId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the item to archive.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the item to archive.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ConfirmAllUsers()
  id: OnePassword_OnePasswordManager_ConfirmAllUsers
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L116
  metadata:
    uid: OnePassword.OnePasswordManager.ConfirmAllUsers
    commentId: M:OnePassword.OnePasswordManager.ConfirmAllUsers
- markdown: Confirms all users.
- code: public void ConfirmAllUsers()
- api3: ConfirmUser(IUser)
  id: OnePassword_OnePasswordManager_ConfirmUser_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L97
  metadata:
    uid: OnePassword.OnePasswordManager.ConfirmUser(OnePassword.Users.IUser)
    commentId: M:OnePassword.OnePasswordManager.ConfirmUser(OnePassword.Users.IUser)
- markdown: Confirms a user.
- code: public void ConfirmUser(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to confirm.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ConfirmUser(string)
  id: OnePassword_OnePasswordManager_ConfirmUser_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L106
  metadata:
    uid: OnePassword.OnePasswordManager.ConfirmUser(System.String)
    commentId: M:OnePassword.OnePasswordManager.ConfirmUser(System.String)
- markdown: Confirms a user.
- code: public void ConfirmUser(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to confirm.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateDocument(IVault, string, string?, string?, IReadOnlyCollection<string>?)
  id: OnePassword_OnePasswordManager_CreateDocument_OnePassword_Vaults_IVault_System_String_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L136
  metadata:
    uid: OnePassword.OnePasswordManager.CreateDocument(OnePassword.Vaults.IVault,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.OnePasswordManager.CreateDocument(OnePassword.Vaults.IVault,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: Creates a document.
- code: public Document CreateDocument(IVault vault, string filePath, string? fileName = null, string? title = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault in which to create the document.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The path to the file to upload.
  - name: fileName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's filename.
    optional: true
  - name: title
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's title.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The document's tags.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Document
      url: OnePassword.Documents.Document.html
    description: The created document.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateDocument(string, string, string?, string?, IReadOnlyCollection<string>?)
  id: OnePassword_OnePasswordManager_CreateDocument_System_String_System_String_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L152
  metadata:
    uid: OnePassword.OnePasswordManager.CreateDocument(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.OnePasswordManager.CreateDocument(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: Creates a document.
- code: public Document CreateDocument(string vaultId, string filePath, string? fileName = null, string? title = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault in which to create the document.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The path to the file to upload.
  - name: fileName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's filename.
    optional: true
  - name: title
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's title.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The document's tags.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Document
      url: OnePassword.Documents.Document.html
    description: The created document.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateGroup(string, string?)
  id: OnePassword_OnePasswordManager_CreateGroup_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L75
  metadata:
    uid: OnePassword.OnePasswordManager.CreateGroup(System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.CreateGroup(System.String,System.String)
- markdown: Create a group.
- code: public GroupDetails CreateGroup(string name, string? description = null)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The group name.
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group description.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: GroupDetails
      url: OnePassword.Groups.GroupDetails.html
    description: The created group.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateItem(Template, IVault)
  id: OnePassword_OnePasswordManager_CreateItem_OnePassword_Templates_Template_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L110
  metadata:
    uid: OnePassword.OnePasswordManager.CreateItem(OnePassword.Templates.Template,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.CreateItem(OnePassword.Templates.Template,OnePassword.Vaults.IVault)
- markdown: Creates an item.
- code: public Item CreateItem(Template template, IVault vault)
- h4: Parameters
- parameters:
  - name: template
    type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template from which to create the item.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault in which to create the item.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The created item.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateItem(Template, string)
  id: OnePassword_OnePasswordManager_CreateItem_OnePassword_Templates_Template_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L119
  metadata:
    uid: OnePassword.OnePasswordManager.CreateItem(OnePassword.Templates.Template,System.String)
    commentId: M:OnePassword.OnePasswordManager.CreateItem(OnePassword.Templates.Template,System.String)
- markdown: Creates an item.
- code: public Item CreateItem(Template template, string vaultId)
- h4: Parameters
- parameters:
  - name: template
    type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template from which to create the item.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault in which to create the item.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The created item.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: CreateVault(string, string?, VaultIcon, bool?)
  id: OnePassword_OnePasswordManager_CreateVault_System_String_System_String_OnePassword_Vaults_VaultIcon_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L75
  metadata:
    uid: OnePassword.OnePasswordManager.CreateVault(System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
    commentId: M:OnePassword.OnePasswordManager.CreateVault(System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
- markdown: Creates a vault.
- code: public VaultDetails CreateVault(string name, string? description = null, VaultIcon icon = VaultIcon.Default, bool? allowAdminsToManage = null)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The vault name.
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault description.
    optional: true
  - name: icon
    type:
    - text: VaultIcon
      url: OnePassword.Vaults.VaultIcon.html
    description: The vault icon.
    optional: true
  - name: allowAdminsToManage
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, allows administrators to manage the vault.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: VaultDetails
      url: OnePassword.Vaults.VaultDetails.html
    description: The created vault.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteDocument(IDocument, IVault)
  id: OnePassword_OnePasswordManager_DeleteDocument_OnePassword_Documents_IDocument_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L247
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.DeleteDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault)
- markdown: Deletes a document.
- code: public void DeleteDocument(IDocument document, IVault vault)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to delete.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the document to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteDocument(string, string)
  id: OnePassword_OnePasswordManager_DeleteDocument_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L258
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteDocument(System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.DeleteDocument(System.String,System.String)
- markdown: Deletes a document.
- code: public void DeleteDocument(string documentId, string vaultId)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to delete.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the document to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteGroup(IGroup)
  id: OnePassword_OnePasswordManager_DeleteGroup_OnePassword_Groups_IGroup_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L132
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteGroup(OnePassword.Groups.IGroup)
    commentId: M:OnePassword.OnePasswordManager.DeleteGroup(OnePassword.Groups.IGroup)
- markdown: Deletes a group.
- code: public void DeleteGroup(IGroup group)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteGroup(string)
  id: OnePassword_OnePasswordManager_DeleteGroup_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L141
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteGroup(System.String)
    commentId: M:OnePassword.OnePasswordManager.DeleteGroup(System.String)
- markdown: Deletes a group.
- code: public void DeleteGroup(string groupId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteItem(IItem, IVault)
  id: OnePassword_OnePasswordManager_DeleteItem_OnePassword_Items_IItem_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L196
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.DeleteItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
- markdown: Deletes an item.
- code: public void DeleteItem(IItem item, IVault vault)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: IItem
      url: OnePassword.Items.IItem.html
    description: The item to delete.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the item to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteItem(string, string)
  id: OnePassword_OnePasswordManager_DeleteItem_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L207
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteItem(System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.DeleteItem(System.String,System.String)
- markdown: Deletes an item.
- code: public void DeleteItem(string itemId, string vaultId)
- h4: Parameters
- parameters:
  - name: itemId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the item to delete.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the item to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteUser(IUser)
  id: OnePassword_OnePasswordManager_DeleteUser_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L160
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteUser(OnePassword.Users.IUser)
    commentId: M:OnePassword.OnePasswordManager.DeleteUser(OnePassword.Users.IUser)
- markdown: Deletes a user.
- code: public void DeleteUser(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteUser(string)
  id: OnePassword_OnePasswordManager_DeleteUser_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L169
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteUser(System.String)
    commentId: M:OnePassword.OnePasswordManager.DeleteUser(System.String)
- markdown: Deletes a user.
- code: public void DeleteUser(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteVault(IVault)
  id: OnePassword_OnePasswordManager_DeleteVault_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L140
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteVault(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.DeleteVault(OnePassword.Vaults.IVault)
- markdown: Deletes a vault.
- code: public void DeleteVault(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: DeleteVault(string)
  id: OnePassword_OnePasswordManager_DeleteVault_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L149
  metadata:
    uid: OnePassword.OnePasswordManager.DeleteVault(System.String)
    commentId: M:OnePassword.OnePasswordManager.DeleteVault(System.String)
- markdown: Deletes a vault.
- code: public void DeleteVault(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to delete.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: EditGroup(IGroup, string?, string?)
  id: OnePassword_OnePasswordManager_EditGroup_OnePassword_Groups_IGroup_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L93
  metadata:
    uid: OnePassword.OnePasswordManager.EditGroup(OnePassword.Groups.IGroup,System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.EditGroup(OnePassword.Groups.IGroup,System.String,System.String)
- markdown: Edits a group.
- code: public void EditGroup(IGroup group, string? name = null, string? description = null)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group's new name.
    optional: true
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group's new description.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditGroup(string, string?, string?)
  id: OnePassword_OnePasswordManager_EditGroup_System_String_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L109
  metadata:
    uid: OnePassword.OnePasswordManager.EditGroup(System.String,System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.EditGroup(System.String,System.String,System.String)
- markdown: Edits a group.
- code: public void EditGroup(string groupId, string? name = null, string? description = null)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group's new name.
    optional: true
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The group's new description.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditItem(Item, IVault)
  id: OnePassword_OnePasswordManager_EditItem_OnePassword_Items_Item_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L138
  metadata:
    uid: OnePassword.OnePasswordManager.EditItem(OnePassword.Items.Item,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.EditItem(OnePassword.Items.Item,OnePassword.Vaults.IVault)
- markdown: Edits an item.
- code: public Item EditItem(Item item, IVault vault)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item to edit.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the item to edit.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The edited item.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: EditItem(Item, string)
  id: OnePassword_OnePasswordManager_EditItem_OnePassword_Items_Item_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L149
  metadata:
    uid: OnePassword.OnePasswordManager.EditItem(OnePassword.Items.Item,System.String)
    commentId: M:OnePassword.OnePasswordManager.EditItem(OnePassword.Items.Item,System.String)
- markdown: Edits an item.
- code: public Item EditItem(Item item, string vaultId)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item to edit.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the item to edit.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The edited item.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: EditUser(IUser, string?, bool?)
  id: OnePassword_OnePasswordManager_EditUser_OnePassword_Users_IUser_System_String_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L123
  metadata:
    uid: OnePassword.OnePasswordManager.EditUser(OnePassword.Users.IUser,System.String,System.Nullable{System.Boolean})
    commentId: M:OnePassword.OnePasswordManager.EditUser(OnePassword.Users.IUser,System.String,System.Nullable{System.Boolean})
- markdown: Edits a user.
- code: public void EditUser(IUser user, string? name = null, bool? travelMode = null)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The user's new name.
    optional: true
  - name: travelMode
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, enables travel mode on the vault. If enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> disables it.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditUser(string, string?, bool?)
  id: OnePassword_OnePasswordManager_EditUser_System_String_System_String_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L139
  metadata:
    uid: OnePassword.OnePasswordManager.EditUser(System.String,System.String,System.Nullable{System.Boolean})
    commentId: M:OnePassword.OnePasswordManager.EditUser(System.String,System.String,System.Nullable{System.Boolean})
- markdown: Edits a user.
- code: public void EditUser(string userId, string? name = null, bool? travelMode = null)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The user's new name.
    optional: true
  - name: travelMode
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, enables travel mode on the vault. If enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> disables it.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditVault(IVault, string?, string?, VaultIcon, bool?)
  id: OnePassword_OnePasswordManager_EditVault_OnePassword_Vaults_IVault_System_String_System_String_OnePassword_Vaults_VaultIcon_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L97
  metadata:
    uid: OnePassword.OnePasswordManager.EditVault(OnePassword.Vaults.IVault,System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
    commentId: M:OnePassword.OnePasswordManager.EditVault(OnePassword.Vaults.IVault,System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
- markdown: Edits a vault.
- code: public void EditVault(IVault vault, string? name = null, string? description = null, VaultIcon icon = VaultIcon.Default, bool? travelMode = null)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault's new name.
    optional: true
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault's new description.
    optional: true
  - name: icon
    type:
    - text: VaultIcon
      url: OnePassword.Vaults.VaultIcon.html
    description: The vault's new icon.
    optional: true
  - name: travelMode
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, enables travel mode on the vault. If enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> disables it.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: EditVault(string, string?, string?, VaultIcon, bool?)
  id: OnePassword_OnePasswordManager_EditVault_System_String_System_String_System_String_OnePassword_Vaults_VaultIcon_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L113
  metadata:
    uid: OnePassword.OnePasswordManager.EditVault(System.String,System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
    commentId: M:OnePassword.OnePasswordManager.EditVault(System.String,System.String,System.String,OnePassword.Vaults.VaultIcon,System.Nullable{System.Boolean})
- markdown: Edits a vault.
- code: public void EditVault(string vaultId, string? name = null, string? description = null, VaultIcon icon = VaultIcon.Default, bool? travelMode = null)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to edit.
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault's new name.
    optional: true
  - name: description
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The vault's new description.
    optional: true
  - name: icon
    type:
    - text: VaultIcon
      url: OnePassword.Vaults.VaultIcon.html
    description: The vault's new icon.
    optional: true
  - name: travelMode
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, enables travel mode on the vault. If enabled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> disables it.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
  - type:
    - text: InvalidOperationException
      url: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
    description: Thrown when there is nothing to edit.
- api3: ForgetAccount(bool)
  id: OnePassword_OnePasswordManager_ForgetAccount_System_Boolean_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Accounts.cs#L132
  metadata:
    uid: OnePassword.OnePasswordManager.ForgetAccount(System.Boolean)
    commentId: M:OnePassword.OnePasswordManager.ForgetAccount(System.Boolean)
- markdown: Forgets the account.
- code: public ImmutableList<string> ForgetAccount(bool all = false)
- h4: Parameters
- parameters:
  - name: all
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, forgets all accounts.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    description: The list of accounts that were forgotten.
- api3: GetAccount(string)
  id: OnePassword_OnePasswordManager_GetAccount_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Accounts.cs#L28
  metadata:
    uid: OnePassword.OnePasswordManager.GetAccount(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetAccount(System.String)
- markdown: Gets the account details.
- code: public AccountDetails GetAccount(string account = "")
- h4: Parameters
- parameters:
  - name: account
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account to retrieve.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: AccountDetails
      url: OnePassword.Accounts.AccountDetails.html
    description: The account details.
- api3: GetAccounts()
  id: OnePassword_OnePasswordManager_GetAccounts
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Accounts.cs#L18
  metadata:
    uid: OnePassword.OnePasswordManager.GetAccounts
    commentId: M:OnePassword.OnePasswordManager.GetAccounts
- markdown: Gets the accounts.
- code: public ImmutableList<Account> GetAccounts()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Account
      url: OnePassword.Accounts.Account.html
    - '>'
    description: The list of accounts.
- api3: GetDocument(IDocument, IVault, string, string?)
  id: OnePassword_OnePasswordManager_GetDocument_OnePassword_Documents_IDocument_OnePassword_Vaults_IVault_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L52
  metadata:
    uid: OnePassword.OnePasswordManager.GetDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault,System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.GetDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault,System.String,System.String)
- markdown: Gets a document.
- code: public void GetDocument(IDocument document, IVault vault, string filePath, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to retrieve.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the document to retrieve.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetDocument(string, string, string, string?)
  id: OnePassword_OnePasswordManager_GetDocument_System_String_System_String_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L68
  metadata:
    uid: OnePassword.OnePasswordManager.GetDocument(System.String,System.String,System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.GetDocument(System.String,System.String,System.String,System.String)
- markdown: Gets a document.
- code: public void GetDocument(string documentId, string vaultId, string filePath, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to retrieve.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the document to retrieve.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetDocuments(IVault)
  id: OnePassword_OnePasswordManager_GetDocuments_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L10
  metadata:
    uid: OnePassword.OnePasswordManager.GetDocuments(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.GetDocuments(OnePassword.Vaults.IVault)
- markdown: Gets a vault's documents.
- code: public ImmutableList<DocumentDetails> GetDocuments(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the documents to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: DocumentDetails
      url: OnePassword.Documents.DocumentDetails.html
    - '>'
    description: The vault's documents.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetDocuments(string)
  id: OnePassword_OnePasswordManager_GetDocuments_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L19
  metadata:
    uid: OnePassword.OnePasswordManager.GetDocuments(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetDocuments(System.String)
- markdown: Gets a vault's documents.
- code: public ImmutableList<DocumentDetails> GetDocuments(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the documents to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: DocumentDetails
      url: OnePassword.Documents.DocumentDetails.html
    - '>'
    description: The vault's documents.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroup(IGroup)
  id: OnePassword_OnePasswordManager_GetGroup_OnePassword_Groups_IGroup_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L56
  metadata:
    uid: OnePassword.OnePasswordManager.GetGroup(OnePassword.Groups.IGroup)
    commentId: M:OnePassword.OnePasswordManager.GetGroup(OnePassword.Groups.IGroup)
- markdown: Gets the group's details.
- code: public GroupDetails GetGroup(IGroup group)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: GroupDetails
      url: OnePassword.Groups.GroupDetails.html
    description: The group details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroup(string)
  id: OnePassword_OnePasswordManager_GetGroup_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L65
  metadata:
    uid: OnePassword.OnePasswordManager.GetGroup(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetGroup(System.String)
- markdown: Gets the group's details.
- code: public GroupDetails GetGroup(string groupId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: GroupDetails
      url: OnePassword.Groups.GroupDetails.html
    description: The group details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroupUsers(string)
  id: OnePassword_OnePasswordManager_GetGroupUsers_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L36
  metadata:
    uid: OnePassword.OnePasswordManager.GetGroupUsers(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetGroupUsers(System.String)
- markdown: Gets a group's users.
- code: public ImmutableList<GroupUser> GetGroupUsers(string groupId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group for which to retrieve users.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: GroupUser
      url: OnePassword.Users.GroupUser.html
    - '>'
    description: The group's users.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroupVaults(string)
  id: OnePassword_OnePasswordManager_GetGroupVaults_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L36
  metadata:
    uid: OnePassword.OnePasswordManager.GetGroupVaults(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetGroupVaults(System.String)
- markdown: Gets a group's vaults.
- code: public ImmutableList<Vault> GetGroupVaults(string groupId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to retrieve vaults for.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The group's vaults.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroups()
  id: OnePassword_OnePasswordManager_GetGroups
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L11
  metadata:
    uid: OnePassword.OnePasswordManager.GetGroups
    commentId: M:OnePassword.OnePasswordManager.GetGroups
- markdown: Gets the groups.
- code: public ImmutableList<Group> GetGroups()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Group
      url: OnePassword.Groups.Group.html
    - '>'
    description: The list of groups.
- api3: GetGroups(IVault)
  id: OnePassword_OnePasswordManager_GetGroups_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L18
  metadata:
    uid: OnePassword.OnePasswordManager.GetGroups(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.GetGroups(OnePassword.Vaults.IVault)
- markdown: Gets a vault's groups.
- code: public ImmutableList<VaultGroup> GetGroups(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault for which to retrieve groups.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: VaultGroup
      url: OnePassword.Groups.VaultGroup.html
    - '>'
    description: The vault's groups.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetGroups(IUser)
  id: OnePassword_OnePasswordManager_GetGroups_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L27
  metadata:
    uid: OnePassword.OnePasswordManager.GetGroups(OnePassword.Users.IUser)
    commentId: M:OnePassword.OnePasswordManager.GetGroups(OnePassword.Users.IUser)
- markdown: Gets a user's groups.
- code: public ImmutableList<UserGroup> GetGroups(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user for which to retrieve groups.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: UserGroup
      url: OnePassword.Groups.UserGroup.html
    - '>'
    description: The user's groups.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetItem(IItem, IVault)
  id: OnePassword_OnePasswordManager_GetItem_OnePassword_Items_IItem_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L60
  metadata:
    uid: OnePassword.OnePasswordManager.GetItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.GetItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault)
- markdown: Gets an item.
- code: public Item GetItem(IItem item, IVault vault)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: IItem
      url: OnePassword.Items.IItem.html
    description: The item to retrieve.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the item to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetItem(string, string)
  id: OnePassword_OnePasswordManager_GetItem_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L71
  metadata:
    uid: OnePassword.OnePasswordManager.GetItem(System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.GetItem(System.String,System.String)
- markdown: Gets an item.
- code: public Item GetItem(string itemId, string vaultId)
- h4: Parameters
- parameters:
  - name: itemId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the item to retrieve.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the item to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetItems(IVault)
  id: OnePassword_OnePasswordManager_GetItems_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L11
  metadata:
    uid: OnePassword.OnePasswordManager.GetItems(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.GetItems(OnePassword.Vaults.IVault)
- markdown: Gets a vault's items.
- code: public ImmutableList<Item> GetItems(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the items to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Item
      url: OnePassword.Items.Item.html
    - '>'
    description: The vault's items.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetItems(string)
  id: OnePassword_OnePasswordManager_GetItems_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L20
  metadata:
    uid: OnePassword.OnePasswordManager.GetItems(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetItems(System.String)
- markdown: Gets a vault's items.
- code: public ImmutableList<Item> GetItems(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the items to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Item
      url: OnePassword.Items.Item.html
    - '>'
    description: The vault's items.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetSecret(string)
  id: OnePassword_OnePasswordManager_GetSecret_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.cs#L116
  metadata:
    uid: OnePassword.OnePasswordManager.GetSecret(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetSecret(System.String)
- markdown: Gets a secret.
- code: public string GetSecret(string reference)
- h4: Parameters
- parameters:
  - name: reference
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The reference to the secret.
- h4: Returns
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: Returns the secret.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetTemplate(ITemplate)
  id: OnePassword_OnePasswordManager_GetTemplate_OnePassword_Templates_ITemplate_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Templates.cs#L17
  metadata:
    uid: OnePassword.OnePasswordManager.GetTemplate(OnePassword.Templates.ITemplate)
    commentId: M:OnePassword.OnePasswordManager.GetTemplate(OnePassword.Templates.ITemplate)
- markdown: Gets a template.
- code: public Template GetTemplate(ITemplate template)
- h4: Parameters
- parameters:
  - name: template
    type:
    - text: ITemplate
      url: OnePassword.Templates.ITemplate.html
    description: The template to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetTemplate(string)
  id: OnePassword_OnePasswordManager_GetTemplate_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Templates.cs#L31
  metadata:
    uid: OnePassword.OnePasswordManager.GetTemplate(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetTemplate(System.String)
- markdown: Gets a template.
- code: public Template GetTemplate(string name)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The template name to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetTemplate(Category)
  id: OnePassword_OnePasswordManager_GetTemplate_OnePassword_Items_Category_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Templates.cs#L45
  metadata:
    uid: OnePassword.OnePasswordManager.GetTemplate(OnePassword.Items.Category)
    commentId: M:OnePassword.OnePasswordManager.GetTemplate(OnePassword.Items.Category)
- markdown: Gets a template.
- code: public Template GetTemplate(Category category)
- h4: Parameters
- parameters:
  - name: category
    type:
    - text: Category
      url: OnePassword.Items.Category.html
    description: The template category.
- h4: Returns
- parameters:
  - type:
    - text: Template
      url: OnePassword.Templates.Template.html
    description: The template details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetTemplates()
  id: OnePassword_OnePasswordManager_GetTemplates
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Templates.cs#L10
  metadata:
    uid: OnePassword.OnePasswordManager.GetTemplates
    commentId: M:OnePassword.OnePasswordManager.GetTemplates
- markdown: Gets the templates.
- code: public ImmutableList<TemplateInfo> GetTemplates()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: TemplateInfo
      url: OnePassword.Templates.TemplateInfo.html
    - '>'
    description: The list of templates.
- api3: GetUser(IUser)
  id: OnePassword_OnePasswordManager_GetUser_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L56
  metadata:
    uid: OnePassword.OnePasswordManager.GetUser(OnePassword.Users.IUser)
    commentId: M:OnePassword.OnePasswordManager.GetUser(OnePassword.Users.IUser)
- markdown: Gets the user's details.
- code: public UserDetails GetUser(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: UserDetails
      url: OnePassword.Users.UserDetails.html
    description: The user details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUser(string)
  id: OnePassword_OnePasswordManager_GetUser_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L65
  metadata:
    uid: OnePassword.OnePasswordManager.GetUser(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetUser(System.String)
- markdown: Gets the user's details.
- code: public UserDetails GetUser(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: UserDetails
      url: OnePassword.Users.UserDetails.html
    description: The user details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUserGroups(string)
  id: OnePassword_OnePasswordManager_GetUserGroups_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L46
  metadata:
    uid: OnePassword.OnePasswordManager.GetUserGroups(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetUserGroups(System.String)
- markdown: Gets a user's groups.
- code: public ImmutableList<UserGroup> GetUserGroups(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user for which to retrieve groups.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: UserGroup
      url: OnePassword.Groups.UserGroup.html
    - '>'
    description: The user's groups.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUserVaults(string)
  id: OnePassword_OnePasswordManager_GetUserVaults_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L46
  metadata:
    uid: OnePassword.OnePasswordManager.GetUserVaults(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetUserVaults(System.String)
- markdown: Gets a user's vaults.
- code: public ImmutableList<Vault> GetUserVaults(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to retrieve vaults for.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The user's vaults.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUsers()
  id: OnePassword_OnePasswordManager_GetUsers
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L11
  metadata:
    uid: OnePassword.OnePasswordManager.GetUsers
    commentId: M:OnePassword.OnePasswordManager.GetUsers
- markdown: Gets the users.
- code: public ImmutableList<User> GetUsers()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: User
      url: OnePassword.Users.User.html
    - '>'
    description: The list of users.
- api3: GetUsers(IGroup)
  id: OnePassword_OnePasswordManager_GetUsers_OnePassword_Groups_IGroup_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L18
  metadata:
    uid: OnePassword.OnePasswordManager.GetUsers(OnePassword.Groups.IGroup)
    commentId: M:OnePassword.OnePasswordManager.GetUsers(OnePassword.Groups.IGroup)
- markdown: Gets a group's users.
- code: public ImmutableList<GroupUser> GetUsers(IGroup group)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group for which to retrieve users.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: GroupUser
      url: OnePassword.Users.GroupUser.html
    - '>'
    description: The group's users.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetUsers(IVault)
  id: OnePassword_OnePasswordManager_GetUsers_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L27
  metadata:
    uid: OnePassword.OnePasswordManager.GetUsers(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.GetUsers(OnePassword.Vaults.IVault)
- markdown: Gets a vault's users.
- code: public ImmutableList<VaultUser> GetUsers(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault for which to retrieve users.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: VaultUser
      url: OnePassword.Users.VaultUser.html
    - '>'
    description: The vault's users.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVault(IVault)
  id: OnePassword_OnePasswordManager_GetVault_OnePassword_Vaults_IVault_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L56
  metadata:
    uid: OnePassword.OnePasswordManager.GetVault(OnePassword.Vaults.IVault)
    commentId: M:OnePassword.OnePasswordManager.GetVault(OnePassword.Vaults.IVault)
- markdown: Gets a vault.
- code: public VaultDetails GetVault(IVault vault)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: VaultDetails
      url: OnePassword.Vaults.VaultDetails.html
    description: The vault details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVault(string)
  id: OnePassword_OnePasswordManager_GetVault_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L65
  metadata:
    uid: OnePassword.OnePasswordManager.GetVault(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetVault(System.String)
- markdown: Gets a vault.
- code: public VaultDetails GetVault(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to retrieve.
- h4: Returns
- parameters:
  - type:
    - text: VaultDetails
      url: OnePassword.Vaults.VaultDetails.html
    description: The vault details.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVaultGroups(string)
  id: OnePassword_OnePasswordManager_GetVaultGroups_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L36
  metadata:
    uid: OnePassword.OnePasswordManager.GetVaultGroups(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetVaultGroups(System.String)
- markdown: Gets a vault's groups.
- code: public ImmutableList<VaultGroup> GetVaultGroups(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault for which to retrieve groups.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: VaultGroup
      url: OnePassword.Groups.VaultGroup.html
    - '>'
    description: The vault's groups.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVaultUsers(string)
  id: OnePassword_OnePasswordManager_GetVaultUsers_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L46
  metadata:
    uid: OnePassword.OnePasswordManager.GetVaultUsers(System.String)
    commentId: M:OnePassword.OnePasswordManager.GetVaultUsers(System.String)
- markdown: Gets a vault's users.
- code: public ImmutableList<VaultUser> GetVaultUsers(string vaultId)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault for which to retrieve users.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: VaultUser
      url: OnePassword.Users.VaultUser.html
    - '>'
    description: The vault's users.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVaults()
  id: OnePassword_OnePasswordManager_GetVaults
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L11
  metadata:
    uid: OnePassword.OnePasswordManager.GetVaults
    commentId: M:OnePassword.OnePasswordManager.GetVaults
- markdown: Gets the vaults.
- code: public ImmutableList<Vault> GetVaults()
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The list of vaults.
- api3: GetVaults(IGroup)
  id: OnePassword_OnePasswordManager_GetVaults_OnePassword_Groups_IGroup_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L18
  metadata:
    uid: OnePassword.OnePasswordManager.GetVaults(OnePassword.Groups.IGroup)
    commentId: M:OnePassword.OnePasswordManager.GetVaults(OnePassword.Groups.IGroup)
- markdown: Gets a group's vaults.
- code: public ImmutableList<Vault> GetVaults(IGroup group)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to retrieve vaults for.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The group's vaults.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GetVaults(IUser)
  id: OnePassword_OnePasswordManager_GetVaults_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L27
  metadata:
    uid: OnePassword.OnePasswordManager.GetVaults(OnePassword.Users.IUser)
    commentId: M:OnePassword.OnePasswordManager.GetVaults(OnePassword.Users.IUser)
- markdown: Gets a user's vaults.
- code: public ImmutableList<Vault> GetVaults(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to retrieve vaults for.
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Vault
      url: OnePassword.Vaults.Vault.html
    - '>'
    description: The user's vaults.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantAccess(IGroup, IUser, UserRole)
  id: OnePassword_OnePasswordManager_GrantAccess_OnePassword_Groups_IGroup_OnePassword_Users_IUser_OnePassword_Users_UserRole_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L151
  metadata:
    uid: OnePassword.OnePasswordManager.GrantAccess(OnePassword.Groups.IGroup,OnePassword.Users.IUser,OnePassword.Users.UserRole)
    commentId: M:OnePassword.OnePasswordManager.GrantAccess(OnePassword.Groups.IGroup,OnePassword.Users.IUser,OnePassword.Users.UserRole)
- markdown: Grants a user access to a group.
- code: public void GrantAccess(IGroup group, IUser user, UserRole userRole = UserRole.Member)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to grant access from.
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to grant access to.
  - name: userRole
    type:
    - text: UserRole
      url: OnePassword.Users.UserRole.html
    description: The user role to grant.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantAccess(string, string, UserRole)
  id: OnePassword_OnePasswordManager_GrantAccess_System_String_System_String_OnePassword_Users_UserRole_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L164
  metadata:
    uid: OnePassword.OnePasswordManager.GrantAccess(System.String,System.String,OnePassword.Users.UserRole)
    commentId: M:OnePassword.OnePasswordManager.GrantAccess(System.String,System.String,OnePassword.Users.UserRole)
- markdown: Grants a user access to a group.
- code: public void GrantAccess(string groupId, string userId, UserRole userRole = UserRole.Member)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to grant access from.
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to grant access to.
  - name: userRole
    type:
    - text: UserRole
      url: OnePassword.Users.UserRole.html
    description: The user role to grant.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantGroupPermissions(string, string, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_OnePasswordManager_GrantGroupPermissions_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L185
  metadata:
    uid: OnePassword.OnePasswordManager.GrantGroupPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.OnePasswordManager.GrantGroupPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Grants a group permissions to a vault.
- code: public void GrantGroupPermissions(string vaultId, string groupId, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to grant permissions from.
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to grant permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to grant.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantPermissions(IVault, IGroup, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_OnePasswordManager_GrantPermissions_OnePassword_Vaults_IVault_OnePassword_Groups_IGroup_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L159
  metadata:
    uid: OnePassword.OnePasswordManager.GrantPermissions(OnePassword.Vaults.IVault,OnePassword.Groups.IGroup,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.OnePasswordManager.GrantPermissions(OnePassword.Vaults.IVault,OnePassword.Groups.IGroup,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Grants a group permissions to a vault.
- code: public void GrantPermissions(IVault vault, IGroup group, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to grant permissions from.
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to grant permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to grant.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantPermissions(IVault, IUser, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_OnePasswordManager_GrantPermissions_OnePassword_Vaults_IVault_OnePassword_Users_IUser_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L172
  metadata:
    uid: OnePassword.OnePasswordManager.GrantPermissions(OnePassword.Vaults.IVault,OnePassword.Users.IUser,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.OnePasswordManager.GrantPermissions(OnePassword.Vaults.IVault,OnePassword.Users.IUser,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Grants a user permissions to a vault.
- code: public void GrantPermissions(IVault vault, IUser user, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to grant permissions from.
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to grant permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to grant.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: GrantUserPermissions(string, string, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_OnePasswordManager_GrantUserPermissions_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L199
  metadata:
    uid: OnePassword.OnePasswordManager.GrantUserPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.OnePasswordManager.GrantUserPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Grants a user permissions to a vault.
- code: public void GrantUserPermissions(string vaultId, string userId, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to grant permissions from.
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to grant permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to grant.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ProvisionUser(string, string, Language)
  id: OnePassword_OnePasswordManager_ProvisionUser_System_String_System_String_OnePassword_Common_Language_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L75
  metadata:
    uid: OnePassword.OnePasswordManager.ProvisionUser(System.String,System.String,OnePassword.Common.Language)
    commentId: M:OnePassword.OnePasswordManager.ProvisionUser(System.String,System.String,OnePassword.Common.Language)
- markdown: Provisions a user.
- code: public UserDetails ProvisionUser(string name, string emailAddress, Language language = Language.Default)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The user name.
  - name: emailAddress
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The user email address.
  - name: language
    type:
    - text: Language
      url: OnePassword.Common.Language.html
    description: The user language.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: UserDetails
      url: OnePassword.Users.UserDetails.html
    description: The provisioned user.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ReactivateUser(IUser)
  id: OnePassword_OnePasswordManager_ReactivateUser_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L200
  metadata:
    uid: OnePassword.OnePasswordManager.ReactivateUser(OnePassword.Users.IUser)
    commentId: M:OnePassword.OnePasswordManager.ReactivateUser(OnePassword.Users.IUser)
- markdown: Reactivates a user.
- code: public void ReactivateUser(IUser user)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to reactivate.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ReactivateUser(string)
  id: OnePassword_OnePasswordManager_ReactivateUser_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L209
  metadata:
    uid: OnePassword.OnePasswordManager.ReactivateUser(System.String)
    commentId: M:OnePassword.OnePasswordManager.ReactivateUser(System.String)
- markdown: Reactivates a user.
- code: public void ReactivateUser(string userId)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to reactivate.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ReplaceDocument(IDocument, IVault, string, string?, string?, IReadOnlyCollection<string>?)
  id: OnePassword_OnePasswordManager_ReplaceDocument_OnePassword_Documents_IDocument_OnePassword_Vaults_IVault_System_String_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L178
  metadata:
    uid: OnePassword.OnePasswordManager.ReplaceDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.OnePasswordManager.ReplaceDocument(OnePassword.Documents.IDocument,OnePassword.Vaults.IVault,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: Replaces a document.
- code: public void ReplaceDocument(IDocument document, IVault vault, string filePath, string? fileName = null, string? title = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to replace.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the document to replace.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The path to the file to upload.
  - name: fileName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's filename.
    optional: true
  - name: title
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's title.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The document's tags.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: ReplaceDocument(string, string, string, string?, string?, IReadOnlyCollection<string>?)
  id: OnePassword_OnePasswordManager_ReplaceDocument_System_String_System_String_System_String_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L196
  metadata:
    uid: OnePassword.OnePasswordManager.ReplaceDocument(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.OnePasswordManager.ReplaceDocument(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: Replaces a document.
- code: public void ReplaceDocument(string documentId, string vaultId, string filePath, string? fileName = null, string? title = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to replace.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault that contains the document to replace.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The path to the file to upload.
  - name: fileName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's filename.
    optional: true
  - name: title
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The document's title.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The document's tags.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokeAccess(IGroup, IUser)
  id: OnePassword_OnePasswordManager_RevokeAccess_OnePassword_Groups_IGroup_OnePassword_Users_IUser_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L178
  metadata:
    uid: OnePassword.OnePasswordManager.RevokeAccess(OnePassword.Groups.IGroup,OnePassword.Users.IUser)
    commentId: M:OnePassword.OnePasswordManager.RevokeAccess(OnePassword.Groups.IGroup,OnePassword.Users.IUser)
- markdown: Revokes a user's access to a group.
- code: public void RevokeAccess(IGroup group, IUser user)
- h4: Parameters
- parameters:
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to revoke access from.
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to revoke access to.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokeAccess(string, string)
  id: OnePassword_OnePasswordManager_RevokeAccess_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Groups.cs#L189
  metadata:
    uid: OnePassword.OnePasswordManager.RevokeAccess(System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.RevokeAccess(System.String,System.String)
- markdown: Revokes a user's access to a group.
- code: public void RevokeAccess(string groupId, string userId)
- h4: Parameters
- parameters:
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to revoke access from.
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to revoke access to.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokeGroupPermissions(string, string, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_OnePasswordManager_RevokeGroupPermissions_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L239
  metadata:
    uid: OnePassword.OnePasswordManager.RevokeGroupPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.OnePasswordManager.RevokeGroupPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Revokes a group's permissions to a vault.
- code: public void RevokeGroupPermissions(string vaultId, string groupId, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to revoke permissions from.
  - name: groupId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the group to revoke permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to revoke.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokePermissions(IVault, IGroup, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_OnePasswordManager_RevokePermissions_OnePassword_Vaults_IVault_OnePassword_Groups_IGroup_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L213
  metadata:
    uid: OnePassword.OnePasswordManager.RevokePermissions(OnePassword.Vaults.IVault,OnePassword.Groups.IGroup,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.OnePasswordManager.RevokePermissions(OnePassword.Vaults.IVault,OnePassword.Groups.IGroup,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Revokes a group's permissions to a vault.
- code: public void RevokePermissions(IVault vault, IGroup group, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to revoke permissions from.
  - name: group
    type:
    - text: IGroup
      url: OnePassword.Groups.IGroup.html
    description: The group to revoke permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to revoke.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokePermissions(IVault, IUser, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_OnePasswordManager_RevokePermissions_OnePassword_Vaults_IVault_OnePassword_Users_IUser_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L226
  metadata:
    uid: OnePassword.OnePasswordManager.RevokePermissions(OnePassword.Vaults.IVault,OnePassword.Users.IUser,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.OnePasswordManager.RevokePermissions(OnePassword.Vaults.IVault,OnePassword.Users.IUser,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Revokes a user's permissions to a vault.
- code: public void RevokePermissions(IVault vault, IUser user, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault to revoke permissions from.
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to revoke permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to revoke.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: RevokeUserPermissions(string, string, IReadOnlyCollection<VaultPermission>)
  id: OnePassword_OnePasswordManager_RevokeUserPermissions_System_String_System_String_System_Collections_Generic_IReadOnlyCollection_OnePassword_Vaults_VaultPermission__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Vaults.cs#L253
  metadata:
    uid: OnePassword.OnePasswordManager.RevokeUserPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
    commentId: M:OnePassword.OnePasswordManager.RevokeUserPermissions(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{OnePassword.Vaults.VaultPermission})
- markdown: Revokes a user's permissions to a vault.
- code: public void RevokeUserPermissions(string vaultId, string userId, IReadOnlyCollection<VaultPermission> permissions)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the vault to revoke permissions from.
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to revoke permissions to.
  - name: permissions
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: VaultPermission
      url: OnePassword.Vaults.VaultPermission.html
    - '>'
    description: The permissions to revoke.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SaveSecret(string, string, string?)
  id: OnePassword_OnePasswordManager_SaveSecret_System_String_System_String_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.cs#L129
  metadata:
    uid: OnePassword.OnePasswordManager.SaveSecret(System.String,System.String,System.String)
    commentId: M:OnePassword.OnePasswordManager.SaveSecret(System.String,System.String,System.String)
- markdown: Saves a secret.
- code: public void SaveSecret(string reference, string filePath, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: reference
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The reference to the secret.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForDocument(IDocument, string, IVault?, bool?, string?)
  id: OnePassword_OnePasswordManager_SearchForDocument_OnePassword_Documents_IDocument_System_String_OnePassword_Vaults_IVault_System_Nullable_System_Boolean__System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L90
  metadata:
    uid: OnePassword.OnePasswordManager.SearchForDocument(OnePassword.Documents.IDocument,System.String,OnePassword.Vaults.IVault,System.Nullable{System.Boolean},System.String)
    commentId: M:OnePassword.OnePasswordManager.SearchForDocument(OnePassword.Documents.IDocument,System.String,OnePassword.Vaults.IVault,System.Nullable{System.Boolean},System.String)
- markdown: >-
    Searches for a document.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: public void SearchForDocument(IDocument document, string filePath, IVault? vault = null, bool? includeArchive = null, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: document
    type:
    - text: IDocument
      url: OnePassword.Documents.IDocument.html
    description: The document to search for.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    - '?'
    description: The vault that contains the document to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived documents in the search.
    optional: true
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForDocument(string, string, string?, bool?, string?)
  id: OnePassword_OnePasswordManager_SearchForDocument_System_String_System_String_System_String_System_Nullable_System_Boolean__System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L108
  metadata:
    uid: OnePassword.OnePasswordManager.SearchForDocument(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)
    commentId: M:OnePassword.OnePasswordManager.SearchForDocument(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)
- markdown: >-
    Searches for a document.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: public void SearchForDocument(string documentId, string filePath, string? vaultId = null, bool? includeArchive = null, string? fileMode = null)
- h4: Parameters
- parameters:
  - name: documentId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the document to search for.
  - name: filePath
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The file path to save the document to.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The ID of the vault that contains the document to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived documents in the search.
    optional: true
  - name: fileMode
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The file mode.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForDocuments(IVault, bool?)
  id: OnePassword_OnePasswordManager_SearchForDocuments_OnePassword_Vaults_IVault_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L29
  metadata:
    uid: OnePassword.OnePasswordManager.SearchForDocuments(OnePassword.Vaults.IVault,System.Nullable{System.Boolean})
    commentId: M:OnePassword.OnePasswordManager.SearchForDocuments(OnePassword.Vaults.IVault,System.Nullable{System.Boolean})
- markdown: >-
    Searches for an document.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: public ImmutableList<DocumentDetails> SearchForDocuments(IVault vault, bool? includeArchive = null)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the documents to search for.
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived documents in the search.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: DocumentDetails
      url: OnePassword.Documents.DocumentDetails.html
    - '>'
    description: The documents that match the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForDocuments(string?, bool?)
  id: OnePassword_OnePasswordManager_SearchForDocuments_System_String_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Documents.cs#L38
  metadata:
    uid: OnePassword.OnePasswordManager.SearchForDocuments(System.String,System.Nullable{System.Boolean})
    commentId: M:OnePassword.OnePasswordManager.SearchForDocuments(System.String,System.Nullable{System.Boolean})
- markdown: >-
    Searches for an document.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: public ImmutableList<DocumentDetails> SearchForDocuments(string? vaultId = null, bool? includeArchive = null)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The ID of the vault that contains the documents to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived documents in the search.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: DocumentDetails
      url: OnePassword.Documents.DocumentDetails.html
    - '>'
    description: The documents that match the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForItem(IItem, IVault?, bool?)
  id: OnePassword_OnePasswordManager_SearchForItem_OnePassword_Items_IItem_OnePassword_Vaults_IVault_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L83
  metadata:
    uid: OnePassword.OnePasswordManager.SearchForItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault,System.Nullable{System.Boolean})
    commentId: M:OnePassword.OnePasswordManager.SearchForItem(OnePassword.Items.IItem,OnePassword.Vaults.IVault,System.Nullable{System.Boolean})
- markdown: >-
    Searches for an item.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: public Item SearchForItem(IItem item, IVault? vault = null, bool? includeArchive = null)
- h4: Parameters
- parameters:
  - name: item
    type:
    - text: IItem
      url: OnePassword.Items.IItem.html
    description: The item to search for.
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    - '?'
    description: The vault that contains the item to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived items in the search.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item that matches the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForItem(string, string?, bool?)
  id: OnePassword_OnePasswordManager_SearchForItem_System_String_System_String_System_Nullable_System_Boolean__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L94
  metadata:
    uid: OnePassword.OnePasswordManager.SearchForItem(System.String,System.String,System.Nullable{System.Boolean})
    commentId: M:OnePassword.OnePasswordManager.SearchForItem(System.String,System.String,System.Nullable{System.Boolean})
- markdown: >-
    Searches for an item.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: public Item SearchForItem(string itemId, string? vaultId = null, bool? includeArchive = null)
- h4: Parameters
- parameters:
  - name: itemId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the item to search for.
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The ID of the vault that contains the item to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived items in the search.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Item
      url: OnePassword.Items.Item.html
    description: The item that matches the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForItems(IVault, bool?, bool?, IReadOnlyCollection<Category>?, IReadOnlyCollection<string>?)
  id: OnePassword_OnePasswordManager_SearchForItems_OnePassword_Vaults_IVault_System_Nullable_System_Boolean__System_Nullable_System_Boolean__System_Collections_Generic_IReadOnlyCollection_OnePassword_Items_Category__System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L30
  metadata:
    uid: OnePassword.OnePasswordManager.SearchForItems(OnePassword.Vaults.IVault,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyCollection{OnePassword.Items.Category},System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.OnePasswordManager.SearchForItems(OnePassword.Vaults.IVault,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyCollection{OnePassword.Items.Category},System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: >-
    Searches for an item.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: public ImmutableList<Item> SearchForItems(IVault vault, bool? includeArchive = null, bool? favorite = null, IReadOnlyCollection<Category>? categories = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: vault
    type:
    - text: IVault
      url: OnePassword.Vaults.IVault.html
    description: The vault that contains the items to search for.
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived items in the search.
    optional: true
  - name: favorite
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, searches for favorites.
    optional: true
  - name: categories
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: Category
      url: OnePassword.Items.Category.html
    - '>'
    - '?'
    description: The categories to search for.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The tags to search for.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Item
      url: OnePassword.Items.Item.html
    - '>'
    description: The items that match the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SearchForItems(string?, bool?, bool?, IReadOnlyCollection<Category>?, IReadOnlyCollection<string>?)
  id: OnePassword_OnePasswordManager_SearchForItems_System_String_System_Nullable_System_Boolean__System_Nullable_System_Boolean__System_Collections_Generic_IReadOnlyCollection_OnePassword_Items_Category__System_Collections_Generic_IReadOnlyCollection_System_String__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Items.cs#L39
  metadata:
    uid: OnePassword.OnePasswordManager.SearchForItems(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyCollection{OnePassword.Items.Category},System.Collections.Generic.IReadOnlyCollection{System.String})
    commentId: M:OnePassword.OnePasswordManager.SearchForItems(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyCollection{OnePassword.Items.Category},System.Collections.Generic.IReadOnlyCollection{System.String})
- markdown: >-
    Searches for an item.
        <remarks>WARNING: If a vault is not specified, the 1Password CLI may generate a large amount of internal calls which may result in throttling.</remarks>
- code: public ImmutableList<Item> SearchForItems(string? vaultId = null, bool? includeArchive = null, bool? favorite = null, IReadOnlyCollection<Category>? categories = null, IReadOnlyCollection<string>? tags = null)
- h4: Parameters
- parameters:
  - name: vaultId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The ID of the vault that contains the items to search for.
    optional: true
  - name: includeArchive
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, includes archived items in the search.
    optional: true
  - name: favorite
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, searches for favorites.
    optional: true
  - name: categories
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: Category
      url: OnePassword.Items.Category.html
    - '>'
    - '?'
    description: The categories to search for.
    optional: true
  - name: tags
    type:
    - text: IReadOnlyCollection
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    description: The tags to search for.
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: ImmutableList
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablelist-1
    - <
    - text: Item
      url: OnePassword.Items.Item.html
    - '>'
    description: The items that match the search.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SignIn(string?)
  id: OnePassword_OnePasswordManager_SignIn_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Accounts.cs#L100
  metadata:
    uid: OnePassword.OnePasswordManager.SignIn(System.String)
    commentId: M:OnePassword.OnePasswordManager.SignIn(System.String)
- markdown: Signs in to the account.
- code: public void SignIn(string? password = null)
- h4: Parameters
- parameters:
  - name: password
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    description: The account password to use when manually signing in.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SignOut(bool)
  id: OnePassword_OnePasswordManager_SignOut_System_Boolean_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Accounts.cs#L120
  metadata:
    uid: OnePassword.OnePasswordManager.SignOut(System.Boolean)
    commentId: M:OnePassword.OnePasswordManager.SignOut(System.Boolean)
- markdown: Signs out of the account.
- code: public void SignOut(bool all = false)
- h4: Parameters
- parameters:
  - name: all
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, signs out of all accounts.
    optional: true
- api3: SuspendUser(IUser, int?)
  id: OnePassword_OnePasswordManager_SuspendUser_OnePassword_Users_IUser_System_Nullable_System_Int32__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L179
  metadata:
    uid: OnePassword.OnePasswordManager.SuspendUser(OnePassword.Users.IUser,System.Nullable{System.Int32})
    commentId: M:OnePassword.OnePasswordManager.SuspendUser(OnePassword.Users.IUser,System.Nullable{System.Int32})
- markdown: Suspends a user.
- code: public void SuspendUser(IUser user, int? deauthorizeDevicesDelay = null)
- h4: Parameters
- parameters:
  - name: user
    type:
    - text: IUser
      url: OnePassword.Users.IUser.html
    description: The user to suspend.
  - name: deauthorizeDevicesDelay
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    - '?'
    description: The number of seconds to delay deauthorizing devices after the user has been suspended.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: SuspendUser(string, int?)
  id: OnePassword_OnePasswordManager_SuspendUser_System_String_System_Nullable_System_Int32__
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Users.cs#L188
  metadata:
    uid: OnePassword.OnePasswordManager.SuspendUser(System.String,System.Nullable{System.Int32})
    commentId: M:OnePassword.OnePasswordManager.SuspendUser(System.String,System.Nullable{System.Int32})
- markdown: Suspends a user.
- code: public void SuspendUser(string userId, int? deauthorizeDevicesDelay = null)
- h4: Parameters
- parameters:
  - name: userId
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The ID of the user to suspend.
  - name: deauthorizeDevicesDelay
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    - '?'
    description: The number of seconds to delay deauthorizing devices after the user has been suspended.
    optional: true
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
- api3: Update()
  id: OnePassword_OnePasswordManager_Update
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.cs#L83
  metadata:
    uid: OnePassword.OnePasswordManager.Update
    commentId: M:OnePassword.OnePasswordManager.Update
- markdown: Updates the 1Password CLI executable.
- code: public bool Update()
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the 1Password CLI executable has been updated, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
- api3: UseAccount(string)
  id: OnePassword_OnePasswordManager_UseAccount_System_String_
  src: https://github.com/jscarle/OnePassword.NET/blob/develop/OnePassword.NET/OnePasswordManager.Accounts.cs#L87
  metadata:
    uid: OnePassword.OnePasswordManager.UseAccount(System.String)
    commentId: M:OnePassword.OnePasswordManager.UseAccount(System.String)
- markdown: Uses the account.
- code: public void UseAccount(string account)
- h4: Parameters
- parameters:
  - name: account
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The account to use.
- h4: Exceptions
- parameters:
  - type:
    - text: ArgumentException
      url: https://learn.microsoft.com/dotnet/api/system.argumentexception
    description: Thrown when there is an invalid argument.
languageId: csharp
metadata:
  description: Represents the 1Password CLI executable manager.
